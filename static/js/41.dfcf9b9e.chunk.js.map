{"version":3,"sources":["components/reactstrap/buttons/ButtonsSourceCode.js","components/reactstrap/carousel/CarouselSourceCode.js","assets/img/slider/05.jpg","assets/img/profile/user-uploads/user-01.jpg","assets/img/profile/post-media/2.jpg","assets/img/profile/post-media/25.jpg","assets/img/slider/04.jpg","assets/img/slider/03.jpg","components/reactstrap/carousel/CarouselCaptions.js","components/reactstrap/buttons/ButtonBlockFoldAgain.js","views/pages/ansFolder/ansFolder.js"],"names":["filledButtons","className","outlineButtons","flatButtons","gradientButtons","reliefButtons","squareButtons","roundButtons","textColorButtons","iconButtons","iconOnlyButtons","buttonGroup","buttonSizes","buttonTags","buttonGroupVertical","carouselBasic","carouselCaptions","carouselUncontrolled","carouselInterval","carouselKeyboard","carouselPause","module","exports","images","CarouselCaptions","props","onExiting","animating","onExited","next","nextIndex","state","activeIndex","length","setState","previous","goToIndex","newIndex","toggleTab","tab","activeTab","this","slides","map","item","src","invest","data","pic","alt","id","width","height","captionText","desc","captionHeader","investName","Fragment","tabId","items","onClickHandler","direction","directionText","another","price","React","Component","ButtonBlock","CardTitle","TabContent","TabPane","Row","Col","lg","md","href","Button","Ripple","block","outline","color","size","Posts","findMore","chooser","rand","Math","floor","random","posts","_id","toString","second","third","parseInt","budget","first","isLoading","divider","check","fetch","method","headers","body","JSON","stringify","then","response","json","total","choosen","push","num","Card","CardBody","elem","sm","ButtonBlockFoldAgain"],"mappings":"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","file":"static/js/41.dfcf9b9e.chunk.js","sourcesContent":["import React from \"react\"\n\nexport const filledButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass FilledButtons extends React.Component {\n  render() {\n    return(\n        <Button.Ripple color=\"primary\">Primary</Button.Ripple>\n\n        <Button.Ripple color=\"success\">Success</Button.Ripple>\n\n        <Button.Ripple color=\"info\">Info</Button.Ripple>\n\n        <Button.Ripple color=\"warning\">Warning</Button.Ripple>\n\n        <Button.Ripple color=\"danger\">Danger</Button.Ripple>\n\n        <Button.Ripple color=\"light\">Light</Button.Ripple>\n\n        <Button.Ripple color=\"dark\">Dark</Button.Ripple>\n    )\n  }\n}\nexport default FilledButtons\n`}\n    </code>\n  </pre>\n)\n\nexport const outlineButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {Button} from \"reactstrap\"\n\n  class OutlineButtons extends React.Component {\n    render() {\n      return(\n          <Button.Ripple outline color=\"primary\">Primary</Button.Ripple>\n\n          <Button.Ripple outline color=\"success\">Success</Button.Ripple>\n\n          <Button.Ripple outline color=\"info\">Info</Button.Ripple>\n\n          <Button.Ripple outline color=\"warning\">Warning</Button.Ripple>\n\n          <Button.Ripple outline color=\"danger\">Danger</Button.Ripple>\n\n          <Button.Ripple outline color=\"light\">Light</Button.Ripple>\n\n          <Button.Ripple outline color=\"dark\">Dark</Button.Ripple>\n      )\n    }\n  }\n  export default OutlineButtons\n  `}\n    </code>\n  </pre>\n)\n\nexport const flatButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass FlatButtons extends React.Component {\n    render() {\n    return(\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-primary\">Primary</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-success\">Success</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-info\">Info</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-warning\">Warning</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-danger\">Danger</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-light\">Light</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-dark\">Dark</Button.Ripple>\n    )\n    }\n}\nexport default FlatButtons\n    `}\n    </code>\n  </pre>\n)\n\nexport const gradientButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass GradientButtons extends React.Component {\nrender() {\n    return(\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-primary\" color=\"none\">Primary</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" color=\"none\">Success</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-info\" color=\"none\">Info</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-warning\" color=\"none\">Warning</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-danger\" color=\"none\">Danger</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-dark\" color=\"none\">Dark</Button.Ripple>\n    )\n}\n}\nexport default GradientButtons\n      `}\n    </code>\n  </pre>\n)\n\nexport const reliefButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass ReliefButtons extends React.Component {\n    render() {\n    return(\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"relief-primary\">Primary</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"relief-success\">Success</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"relief-info\">Info</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"relief-warning\">Warning</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"relief-danger\">Danger</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"relief-dark\">Dark</Button.Ripple>\n    )\n    }\n}\nexport default ReliefButtons\n        `}\n    </code>\n  </pre>\n)\n\nexport const squareButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass SqaureButtons extends React.Component {\n    render() {\n    return(\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"primary\">\n      Primary\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"success\">\n      Success\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"info\">\n      Info\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"warning\">\n      Warning\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"danger\">\n      Danger\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"light\">\n      Light\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"dark\">\n      Dark\n    </Button.Ripple>\n    )\n    }\n}\nexport default SqaureButtons\n          `}\n    </code>\n  </pre>\n)\n\nexport const roundButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass RoundButtons extends React.Component {\n    render() {\n    return(\n      <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"primary\">\n      Primary\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"success\">\n      Success\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"info\">\n      Info\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"warning\">\n      Warning\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"danger\">\n      Danger\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"light\">\n      Light\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"dark\">\n      Dark\n    </Button.Ripple>\n    )\n    }\n}\nexport default RoundButtons\n            `}\n    </code>\n  </pre>\n)\n\nexport const textColorButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass TextColorButtons extends React.Component {\n    render() {\n    return(\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-primary\" color=\"flat-primary\">\n      Primary\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-success\" color=\"flat-success\">\n      Success\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-info\" color=\"flat-info\">\n      Info\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-warning\" color=\"flat-warning\">\n      Warning\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-danger\" color=\"flat-danger\">\n      Danger\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-light\" color=\"flat-light\">\n      Light\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-dark\" color=\"flat-dark\">\n      Dark\n    </Button.Ripple>\n    )\n    }\n}\nexport default TextColorButtons\n              `}\n    </code>\n  </pre>\n)\n\nexport const iconButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass IconButtons extends React.Component {\n  render() {\n  return(\n    <Button.Ripple className=\"mr-1 mb-1\" outline color=\"primary\">\n      <Home size={14} />\n      Home\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1\" color=\"warning\">\n      <Star size={14} />\n       Star\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-success\">\n      <Check size={14} />\n      Done\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1\" outline color=\"primary\" disabled>\n      Home size={14} />\n      Home\n    </Button.Ripple>\n  )\n  }\n}\nexport default IconButtons\n              `}\n    </code>\n  </pre>\n)\n\nexport const iconOnlyButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\nimport { Search, Inbox, Camera } from \"react-feather\"\n\nclass IconOnlyButtons extends React.Component {\n  render() {\n  return(\n    <Button.Ripple className=\"mr-1 mb-1\" outline color=\"primary\">\n      <Search size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1\" color=\"warning\">\n      <Inbox size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-success\">\n      <Camera size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1\" outline color=\"primary\" disabled>\n      <Search size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple\n      className=\"mr-1 mb-1 rounded-circle\"\n      outline\n      color=\"primary\"\n    >\n      <Search size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 rounded-circle\" color=\"warning\">\n      <Inbox size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple\n      className=\"mr-1 mb-1 rounded-circle\"\n      color=\"flat-success\"\n    >\n      <Camera size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple\n      className=\"mr-1 mb-1 rounded-circle\"\n      outline\n      color=\"primary\"\n      disabled\n    >\n      <Search size={14} />\n    </Button.Ripple>\n  )\n  }\n}\nexport default IconOnlyButtons\n              `}\n    </code>\n  </pre>\n)\n\nexport const buttonGroup = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button, ButtonGroup, Row, Col} from \"reactstrap\"\nimport { Facebook, Instagram, Twitter } from \"react-feather\"\n\nclass ButtonGroups extends React.Component {\n  render() {\n  return(\n    <Row>\n    <Col md={6} sm={12}>\n      <Button.RippleGroup>\n        <Button.Ripple color=\"primary\">Left</Button.Ripple>{\" \"}\n        <Button.Ripple color=\"danger\">Middle</Button.Ripple>{\" \"}\n        <Button.Ripple color=\"info\">Right</Button.Ripple>{\" \"}\n      </ButtonGroup>\n    </Col>\n\n    <Col md={6} sm={12}>\n      <Button.RippleGroup>\n        <Button.Ripple outline color=\"primary\">\n          <Facebook size={15} />\n        </Button.Ripple>{\" \"}\n        <Button.Ripple outline color=\"danger\">\n          <Twitter size={15} />\n        </Button.Ripple>{\" \"}\n        <Button.Ripple outline color=\"info\">\n          <Instagram size={15} />\n        </Button.Ripple>{\" \"}\n      </ButtonGroup>\n    </Col>\n  </Row>\n  )\n  }\n}\nexport default ButtonGroups\n              `}\n    </code>\n  </pre>\n)\n\nexport const buttonSizes = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button, Row, Col} from \"reactstrap\"\n\nclass ButtonSizes extends React.Component {\n  render() {\n  return(\n    <Row>\n      <Col md={6} sm={12}>\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"primary\" size=\"lg\">\n          Large\n        </Button.Ripple>{\" \"}\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"danger\">\n          Default\n        </Button.Ripple>{\" \"}\n        <Button.Ripple className=\"mb-1\" color=\"info\" size=\"sm\">\n          Small\n        </Button.Ripple>{\" \"}\n      </Col>\n      <Col md={6} sm={12}>\n        <Button.Ripple\n          outline\n          className=\"mr-1 mb-1\"\n          color=\"primary\"\n          size=\"lg\"\n        >\n          Large\n        </Button.Ripple>{\" \"}\n        <Button.Ripple outline className=\"mr-1 mb-1\" color=\"danger\">\n          Default\n        </Button.Ripple>{\" \"}\n        <Button.Ripple outline className=\"mb-1\" color=\"info\" size=\"sm\">\n          Small\n        </Button.Ripple>\n      </Col>\n  </Row>\n  )\n  }\n}\nexport default ButtonSizes\n              `}\n    </code>\n  </pre>\n)\n\nexport const buttonBlock = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button, Row, Col} from \"reactstrap\"\n\nclass ButtonBlock extends React.Component {\n  render() {\n  return(\n    <Row>\n      <Col lg={6} md={12}>\n        <Button.Ripple className=\"mr-1 mb-1 btn-block\" color=\"primary\" size=\"lg\">\n          Block Level Button\n        </Button.Ripple>\n      </Col>\n      <Col lg={6} md={12}>\n        <Button.Ripple outline className=\"mr-1 mb-1 btn-block\" color=\"primary\" size=\"lg\">\n          Block Level Button\n        </Button.Ripple>\n      </Col>\n    </Row>\n  )\n  }\n}\nexport default ButtonBlock\n              `}\n    </code>\n  </pre>\n)\n\nexport const buttonTags = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass ButtonTags extends React.Component {\n  render() {\n  return(\n    <a\n      className=\"mr-1 mb-1 btn btn-primary\"\n      color=\"primary\"\n      href=\"https://pixinvent.com/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Link\n    </a>\n    <Button.Ripple className=\"mr-1 mb-1\" color=\"primary\" tag=\"button\">\n      Button\n    </Button.Ripple>\n    <input\n      className=\"mr-1 mb-1 btn btn-primary\"\n      type=\"button\"\n      value=\"Input\"\n    />\n    <input\n      className=\"mr-1 mb-1 btn btn-primary\"\n      type=\"submit\"\n      value=\"Submit\"\n    />\n  )\n  }\n}\nexport default ButtonTags\n              `}\n    </code>\n  </pre>\n)\n\nexport const buttonGroupVertical = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button, ButtonGroup, Row, Col} from \"reactstrap\"\n\nclass ButtonGroupsVertical extends React.Component {\n  render() {\n  return(\n    <Row>\n      <Col md={4} sm={12}>\n        <Button.RippleGroup vertical className=\"mb-1\">\n          <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n        </ButtonGroup>\n      </Col>\n      <Col md={4} sm={12}>\n        <Button.RippleGroup vertical className=\"mb-1\">\n          <Button.Ripple color=\"primary\">Primary</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"success\">Success</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"info\">Info</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"warning\">Warning</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"danger\">Danger</Button.Ripple>{\" \"}\n        </ButtonGroup>\n      </Col>\n      <Col md={4} sm={12}>\n        <Button.RippleGroup vertical className=\"mb-1\">\n          <Button.Ripple outline color=\"primary\">\n            Button\n          </Button.Ripple>{\" \"}\n          <Button.Ripple outline color=\"success\">\n            Button\n          </Button.Ripple>{\" \"}\n          <Button.Ripple outline color=\"info\">\n            Button\n          </Button.Ripple>{\" \"}\n          <Button.Ripple outline color=\"warning\">\n            Button\n          </Button.Ripple>{\" \"}\n          <Button.Ripple outline color=\"danger\">\n            Button\n          </Button.Ripple>{\" \"}\n        </ButtonGroup>\n      </Col>\n  </Row>\n  )\n  }\n}\nexport default ButtonGroupsVertical\n              `}\n    </code>\n  </pre>\n)\n","import React from \"react\"\n\nexport const carouselBasic = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators\n} from \"reactstrap\"\nimport sliderImage1 from \"../../../assets/img/slider/01.jpg\"\nimport sliderImage2 from \"../../../assets/img/slider/02.jpg\"\nimport sliderImage3 from \"../../../assets/img/slider/03.jpg\"\n\nconst images = [\n  {\n    src: sliderImage1,\n    id: 1\n  },\n  {\n    src: sliderImage2,\n    id: 2\n  },\n  {\n    src: sliderImage3,\n    id: 3\n  }\n]\n\nclass CarouselBasic extends React.Component {\n  state = {\n    activeIndex: 0\n  }\n\n  onExiting = () => {\n    this.animating = true\n  }\n\n  onExited = () => {\n    this.animating = false\n  }\n\n  next = () => {\n    if (this.animating) return\n    const nextIndex =\n      this.state.activeIndex === images.length - 1\n        ? 0\n        : this.state.activeIndex + 1\n    this.setState({ activeIndex: nextIndex })\n  }\n\n  previous = () => {\n    if (this.animating) return\n    const nextIndex =\n      this.state.activeIndex === images.length - 1\n        ? 0\n        : this.state.activeIndex - 1\n    this.setState({ activeIndex: nextIndex })\n  }\n\n  goToIndex = newIndex => {\n    if (this.animating) return\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    const { activeIndex } = this.state\n\n    const slides = images.map(item => {\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={item.id}\n        >\n          <img src={item.src} className=\"img-fluid\" alt={item.id} />\n        </CarouselItem>\n      )\n    })\n    return (\n      <React.Fragment>\n        <Carousel\n            activeIndex={activeIndex}\n            next={this.next}\n            previous={this.previous}\n        >\n            <CarouselIndicators\n            items={images}\n            activeIndex={activeIndex}\n            onClickHandler={this.goToIndex}\n            />\n            {slides}\n            <CarouselControl\n            direction=\"prev\"\n            directionText=\"Previous\"\n            onClickHandler={this.previous}\n            />\n            <CarouselControl\n            direction=\"next\"\n            directionText=\"Next\"\n            onClickHandler={this.next}\n            />\n        </Carousel>\n    </React.Fragment>\n    )\n  }\n}\nexport default CarouselBasic\n\n    `}\n    </code>\n  </pre>\n)\n\nexport const carouselCaptions = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from \"reactstrap\"\nimport sliderImage1 from \"../../../assets/img/slider/03.jpg\"\nimport sliderImage2 from \"../../../assets/img/slider/04.jpg\"\nimport sliderImage3 from \"../../../assets/img/slider/05.jpg\"\n\nconst images = [\n  {\n      src: sliderImage1,\n      id: 1,\n      header: \"Slide 1\",\n      caption: \"Cupcake ipsum dolor sit amet toffee lemon drops bonbon.\"\n  },\n  {\n      src: sliderImage2,\n      id: 2,\n      header: \"Slide 2\",\n      caption: \"Cheesecake caramels wafer pie lollipop.\"\n  },\n  {\n      src: sliderImage3,\n      id: 3,\n      header: \"Slide 3\",\n      caption: \"Candy canes toffee gummies soufflé fruitcake dragée icing.\"\n  }\n]\n\nclass CarouselCaption extends React.Component {\n  state = {\n    activeIndex: 0\n  }\n\n  onExiting = () => {\n    this.animating = true\n  }\n\n  onExited = () => {\n    this.animating = false\n  }\n\n  next = () => {\n    if (this.animating) return\n    const nextIndex =\n      this.state.activeIndex === images.length - 1\n        ? 0\n        : this.state.activeIndex + 1\n    this.setState({ activeIndex: nextIndex })\n  }\n\n  previous = () => {\n    if (this.animating) return\n    const nextIndex =\n      this.state.activeIndex === images.length - 1\n        ? 0\n        : this.state.activeIndex - 1\n    this.setState({ activeIndex: nextIndex })\n  }\n\n  goToIndex = newIndex => {\n    if (this.animating) return\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    const { activeIndex } = this.state\n\n    const slides = images.map(item => {\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={item.id}\n        >\n          <img src={item.src} className=\"img-fluid\" alt={item.id} />\n          <CarouselCaption captionText={item.caption} captionHeader={item.header} />\n        </CarouselItem>\n      )\n    })\n    return (\n      <React.Fragment>\n        <Carousel\n            activeIndex={activeIndex}\n            next={this.next}\n            previous={this.previous}\n        >\n            <CarouselIndicators\n            items={images}\n            activeIndex={activeIndex}\n            onClickHandler={this.goToIndex}\n            />\n            {slides}\n            <CarouselControl\n            direction=\"prev\"\n            directionText=\"Previous\"\n            onClickHandler={this.previous}\n            />\n            <CarouselControl\n            direction=\"next\"\n            directionText=\"Next\"\n            onClickHandler={this.next}\n            />\n        </Carousel>\n    </React.Fragment>\n    )\n  }\n}\nexport default CarouselCaption\n\n    `}\n    </code>\n  </pre>\n)\n\nexport const carouselUncontrolled = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport { UncontrolledCarousel } from \"reactstrap\"\nimport sliderImage1 from \"../../../assets/img/slider/03.jpg\"\nimport sliderImage2 from \"../../../assets/img/slider/04.jpg\"\nimport sliderImage3 from \"../../../assets/img/slider/05.jpg\"\n\nconst images = [\n  {\n      src: sliderImage1,\n      id: 1,\n      header: \"Slide 1\",\n      caption: \"Cupcake ipsum dolor sit amet toffee lemon drops bonbon.\"\n  },\n  {\n      src: sliderImage2,\n      id: 2,\n      header: \"Slide 2\",\n      caption: \"Cheesecake caramels wafer pie lollipop.\"\n  },\n  {\n      src: sliderImage3,\n      id: 3,\n      header: \"Slide 3\",\n      caption: \"Candy canes toffee gummies soufflé fruitcake dragée icing.\"\n  }\n]\n\nclass CarouselUncontrolled extends React.Component {\n  state = {\n    activeTab: \"1\",\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <UncontrolledCarousel items={images} />\n    </React.Fragment>\n    )\n  }\n}\nexport default CarouselUncontrolled\n\n        `}\n    </code>\n  </pre>\n)\n\nexport const carouselInterval = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport { UncontrolledCarousel } from \"reactstrap\"\nimport sliderImage1 from \"../../../assets/img/slider/05.jpg\"\nimport sliderImage2 from \"../../../assets/img/slider/02.jpg\"\nimport sliderImage3 from \"../../../assets/img/slider/03.jpg\"\n\nconst images = [\n  {\n      src: sliderImage1,\n      id: 1,\n      header: \"Slide 1\",\n      caption: \"Cupcake ipsum dolor sit amet toffee lemon drops bonbon.\"\n  },\n  {\n      src: sliderImage2,\n      id: 2,\n      header: \"Slide 2\",\n      caption: \"Cheesecake caramels wafer pie lollipop.\"\n  },\n  {\n      src: sliderImage3,\n      id: 3,\n      header: \"Slide 3\",\n      caption: \"Candy canes toffee gummies soufflé fruitcake dragée icing.\"\n  }\n]\n\nclass CarouselInterval extends React.Component {\n  state = {\n    activeTab: \"1\",\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <UncontrolledCarousel interval=\"500\" items={images} />\n    </React.Fragment>\n    )\n  }\n}\nexport default CarouselInterval`}\n    </code>\n  </pre>\n)\n\nexport const carouselKeyboard = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport { UncontrolledCarousel } from \"reactstrap\"\nimport sliderImage1 from \"../../../assets/img/slider/05.jpg\"\nimport sliderImage2 from \"../../../assets/img/slider/01.jpg\"\nimport sliderImage3 from \"../../../assets/img/slider/03.jpg\"\n\nconst images = [\n  {\n      src: sliderImage1,\n      id: 1,\n      header: \"Slide 1\",\n      caption: \"Cupcake ipsum dolor sit amet toffee lemon drops bonbon.\"\n  },\n  {\n      src: sliderImage2,\n      id: 2,\n      header: \"Slide 2\",\n      caption: \"Cheesecake caramels wafer pie lollipop.\"\n  },\n  {\n      src: sliderImage3,\n      id: 3,\n      header: \"Slide 3\",\n      caption: \"Candy canes toffee gummies soufflé fruitcake dragée icing.\"\n  }\n]\n\nclass CarouselKeyboard extends React.Component {\n  state = {\n    activeTab: \"1\",\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <UncontrolledCarousel keyboard={false} items={images} />\n    </React.Fragment>\n    )\n  }\n}\nexport default CarouselKeyboard\n\n            `}\n    </code>\n  </pre>\n)\n\nexport const carouselPause = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport { UncontrolledCarousel } from \"reactstrap\"\nimport sliderImage1 from \"../../../assets/img/slider/05.jpg\"\nimport sliderImage2 from \"../../../assets/img/slider/01.jpg\"\nimport sliderImage3 from \"../../../assets/img/slider/03.jpg\"\n\nconst images = [\n  {\n      src: sliderImage1,\n      id: 1,\n      header: \"Slide 1\",\n      caption: \"Cupcake ipsum dolor sit amet toffee lemon drops bonbon.\"\n  },\n  {\n      src: sliderImage2,\n      id: 2,\n      header: \"Slide 2\",\n      caption: \"Cheesecake caramels wafer pie lollipop.\"\n  },\n  {\n      src: sliderImage3,\n      id: 3,\n      header: \"Slide 3\",\n      caption: \"Candy canes toffee gummies soufflé fruitcake dragée icing.\"\n  }\n]\n\nclass CarouselKeyboard extends React.Component {\n  state = {\n    activeTab: \"1\",\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <UncontrolledCarousel pause items={images} />\n    </React.Fragment>\n    )\n  }\n}\nexport default CarouselPause`}\n    </code>\n  </pre>\n)\n","module.exports = __webpack_public_path__ + \"static/media/05.f45463a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/user-01.a8479cb8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.fedb99d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/25.e002b22a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/04.142989c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/03.f098ec19.jpg\";","import React from \"react\"\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { carouselCaptions } from \"./CarouselSourceCode\"\nimport sliderImage1 from \"../../../assets/img/slider/03.jpg\"\nimport sliderImage2 from \"../../../assets/img/slider/04.jpg\"\nimport sliderImage3 from \"../../../assets/img/slider/05.jpg\"\n\nconst images = [\n  {\n  }\n]\n\nclass CarouselCaptions extends React.Component {\n   constructor(props) {\n    super(props);\n\n  this.state = {\n    activeTab: \"1\",\n    activeIndex: 0,\n    \n  }\n}\n\n  onExiting = () => {\n    this.animating = true\n  }\n\n \n\n  onExited = () => {\n    this.animating = false\n  }\n\n  next = () => {\n    if (this.animating) return\n    const nextIndex =\n      this.state.activeIndex === images.length - 1\n        ? 0\n        : this.state.activeIndex + 1\n    this.setState({ activeIndex: nextIndex })\n  }\n\n  previous = () => {\n    if (this.animating) return\n    const nextIndex =\n      this.state.activeIndex === 0\n        ? images.length - 1\n        : this.state.activeIndex - 1\n    this.setState({ activeIndex: nextIndex })\n  }\n\n  goToIndex = newIndex => {\n    if (this.animating) return\n    this.setState({ activeIndex: newIndex })\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    const { activeIndex } = this.state\n\n    const slides = images.map(item => {\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n        >\n          <img src={this.props.invest.data.pic} className=\"img-fluid\" alt={item.id} width=\"200\" height=\"200\" />\n          <CarouselCaption\n            captionText={this.props.invest.data.desc}\n            captionHeader={this.props.invest.data.investName}\n          />\n        </CarouselItem>\n      )\n    })\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>{this.props.invest.data.investName}</CardTitle>\n            <div className=\"views\">\n                      </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Carousel\n                  activeIndex={activeIndex}\n                  next={this.next}\n                  previous={this.previous}\n                >\n                  <CarouselIndicators\n                    items={images}\n                    activeIndex={activeIndex}\n                    onClickHandler={this.goToIndex}\n                  />\n                  {slides}\n                  <CarouselControl\n                    direction=\"prev\"\n                    directionText=\"Previous\"\n                    onClickHandler={this.previous}\n                  />\n                  <CarouselControl\n                    direction=\"next\"\n                    directionText=\"Next\"\n                    onClickHandler={this.props.another}\n                  />\n                </Carousel>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {carouselCaptions}\n              </TabPane>\n            </TabContent>\n            סכום: \n            {this.props.invest.data.price}\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default CarouselCaptions\n","import React from \"react\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { buttonBlock } from \"./ButtonsSourceCode\"\r\n\r\nclass ButtonBlock extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n            <CardTitle></CardTitle>\r\n            <div className=\"views\">\r\n              </div>        \r\n            <p>\r\n              \r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Row >\r\n                    <Col lg={9} md={12}>\r\n                    <a href=\"ansFolder\">\r\n                    <Button.Ripple\r\n                      block\r\n                      outline\r\n                      className=\"btn-block\"\r\n                      color=\"primary\"\r\n                      size=\"lg\"\r\n                    >\r\n                       בואו ננסה שוב – תבנה לי תיק נוסף \r\n\r\n                    </Button.Ripple>\r\n                    </a>\r\n                  </Col>\r\n                </Row>\r\n                </TabPane>\r\n                </TabContent>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ButtonBlock\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  UncontrolledTooltip,\r\n  Input,\r\n  Label,\r\n  Button\r\n} from \"reactstrap\"\r\nimport { Heart, MessageSquare } from \"react-feather\"\r\nimport profileImg from \"../../../assets/img/profile/user-uploads/user-01.jpg\"\r\nimport postImg1 from \"../../../assets/img/profile/post-media/2.jpg\"\r\nimport postImg2 from \"../../../assets/img/profile/post-media/25.jpg\"\r\nimport person1 from \"../../../assets/img/portrait/small/avatar-s-1.jpg\"\r\nimport person2 from \"../../../assets/img/portrait/small/avatar-s-2.jpg\"\r\nimport person3 from \"../../../assets/img/portrait/small/avatar-s-3.jpg\"\r\nimport person4 from \"../../../assets/img/portrait/small/avatar-s-4.jpg\"\r\nimport person5 from \"../../../assets/img/portrait/small/avatar-s-5.jpg\"\r\nimport person6 from \"../../../assets/img/portrait/small/avatar-s-6.jpg\"\r\nimport person7 from \"../../../assets/img/portrait/small/avatar-s-7.jpg\"\r\nimport CarouselCaptions from \"../../../components/reactstrap/carousel/CarouselCaptions\"\r\nimport ButtonBlockFoldAgain from \"../../../components/reactstrap/buttons/ButtonBlockFoldAgain\"\r\n\r\nimport { Search, Inbox, Camera } from \"react-feather\"\r\nimport { Row, Col, CardTitle } from \"reactstrap\"\r\n\r\n\r\n\r\nclass Posts extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n\r\n\r\n   this.state = {\r\n    isLoading: false,\r\n    first: null,\r\n    second: null,\r\n    third: null,\r\n    posts: [],\r\n    budget: null,\r\n    divider: null,\r\n    check: \"mmmm\"\r\n  };\r\n}\r\n\r\ncomponentDidMount() {\r\n  var data={divider: 3, budget: 300000};\r\n  var rand1;\r\n  var rand2;\r\n  var rand3;\r\n  fetch('/buildFolder', {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify(data)},)\r\n      .then(response => response.json())\r\n      .then(posts => this.setState({ posts: posts.posts, first: posts.first, second: posts.second, third: posts.third }));\r\n               this.setState({budget: data.budget}); \r\n               this.setState({divider: data.divider}); \r\n                 }\r\n\r\n  findMore = (id, chooser) => {\r\n    if (chooser==\"1\") {\r\n      var rand = Math.floor(Math.random() * this.state.posts.length);\r\n      while(this.state.posts[rand]._id.toString()==id.toString()||this.state.posts[rand]._id.toString()==this.state.second._id.toString()||this.state.posts[rand]._id.toString()==this.state.third._id.toString()||parseInt(this.state.posts[rand].price)+parseInt(this.state.second.price)+parseInt(this.state.third.price)>this.state.budget) {rand = Math.floor(Math.random() * this.state.posts.length);}\r\n      this.setState({first: this.state.posts[rand]});\r\n    }\r\n    if (chooser==\"2\") {\r\n      var rand = Math.floor(Math.random() * this.state.posts.length);\r\n      while(this.state.posts[rand]._id.toString()==id.toString()||this.state.posts[rand]._id.toString()==this.state.first._id.toString()||this.state.posts[rand]._id.toString()==this.state.third._id.toString()||parseInt(this.state.posts[rand].price)+parseInt(this.state.first.price)+parseInt(this.state.third.price)>this.state.budget) {rand = Math.floor(Math.random() * this.state.posts.length);}\r\n      this.setState({second: this.state.posts[rand]});\r\n      }\r\n    \r\n    if (chooser==\"3\") {\r\n     var rand = Math.floor(Math.random() * this.state.posts.length);\r\n      while(this.state.posts[rand]._id.toString()==id.toString()||this.state.posts[rand]._id.toString()==this.state.first._id.toString()||this.state.posts[rand]._id.toString()==this.state.second._id.toString()||parseInt(this.state.posts[rand].price)+parseInt(this.state.first.price)+parseInt(this.state.second.price)>this.state.budget) {rand = Math.floor(Math.random() * this.state.posts.length);}\r\n      this.setState({third: this.state.posts[rand]});\r\n      }\r\n    }\r\n\r\n\r\n  render() {\r\n    let total=0;\r\n    if (!(this.state.posts))\r\n      return \"dfdf\";\r\n      if (this.state.first) {total+=parseInt(this.state.first.price)}\r\n      if (this.state.second) {total+=parseInt(this.state.second.price)}\r\n      if (this.state.third) {total+=parseInt(this.state.third.price)}\r\n      let choosen=[];\r\n    if (this.state.first){choosen.push({data: this.state.first, num: \"1\"});}\r\n    if (this.state.second) {choosen.push({data: this.state.second, num: \"2\"});}\r\n    if (this.state.third) {choosen.push({data: this.state.third, num: \"3\"});}\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle>הבחירה שלך: <br/>\r\n                סכום: {this.state.budget} שקל .        אפיקי השקעה: 3</CardTitle>\r\n            <p>\r\n            <Row>\r\n            {choosen.map(elem=> <Col md=\"4\" sm=\"12\">\r\n            <CarouselCaptions invest={elem} another={()=>this.findMore(elem.data._id, elem.num)} />\r\n            </Col>)}\r\n            </Row>\r\n            סכום ההשקעות: \r\n            {total}\r\n          שקל, \r\n            עודף: \r\n            {this.state.budget-total}\r\n            שקל   \r\n            <Col md=\"6\" sm=\"12\">\r\n            <ButtonBlockFoldAgain />\r\n            </Col>\r\n            <Row>\r\n            </Row>\r\n            </p>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Posts\r\n"],"sourceRoot":""}