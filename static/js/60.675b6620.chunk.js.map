{"version":3,"sources":["../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js","redux/actions/chat/index.js","views/apps/chat/ChatSidebar.js","views/apps/chat/ChatLog.js","views/apps/chat/receiverProfile.js","views/apps/chat/UserSidebar.js","views/apps/chat/Chat.js"],"names":["defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","props","_this","call","this","state","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","_assertThisInitialized","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_inheritsLoose","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","setState","window","saveSidebarWidth","componentDidUpdate","isTouching","ev","touch","targetTouches","identifier","clientX","ind","length","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","pullRight","Math","abs","width","sidebar","offsetWidth","node","innerWidth","min","render","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","className","rootClassName","style","root","role","id","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","React","createElement","sidebarClassName","ref","sidebarId","overlayClassName","onClick","overlayId","contentClassName","contentId","children","Component","defaultProps","defineProperty","module","exports","target","i","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","getChats","dispatch","axios","get","then","response","type","contacts","data","chats","catch","err","console","log","ChatSidebar","chatsContacts","messages","status","value","getChatContents","getContactChats","handleOnChange","e","searchContacts","chat","chatContacts","contactsArr","filteredContacts","chatsArr","filteredChats","renderContacts","map","contact","uid","handleActiveChat","markSeenAllMessages","mainSidebar","src","photoURL","alt","displayName","height","about","renderChats","Array","isArray","lastMsg","msg","slice","lastMsgDate","Date","time","lastMsgMonth","toLocaleString","month","lastMsgDay","getDate","pendingMsg","isSeen","isSent","activeID","undefined","activeChatID","textContent","Badge","color","pill","Card","size","handleUserSidebar","userImg","FormGroup","Input","placeholder","onChange","options","wheelPropagation","connect","chatApp","query","post","contactId","ChatLog","activeUser","activeChat","handleSendMessage","isPinned","text","sendMessage","handleTime","time_to","time_from","date_time_to","parse","date_time_from","getFullYear","getMonth","scrollToBottom","chatContainer","ReactDOM","findDOMNode","chatArea","scrollTop","scrollHeight","activeUserUid","Fragment","renderSentTime","mql","matches","handleReceiverSidebar","togglePinned","stroke","el","onSubmit","preventDefault","Button","newMsg","toString","message","ReceiverProfile","receiverProfile","UserSidebar","userProfile","name","rows","maxLength","label","defaultChecked","changeStatus","matchMedia","Chat","sidebarDocked","sidebarOpen","userSidebar","user","onSetSidebarOpen","mediaQueryChanged","addListener","removeListener","Consumer","context","direction"],"mappings":"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","file":"static/js/60.675b6620.chunk.js","sourcesContent":["import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","import axios from \"axios\"\n\nexport const getChats = () => {\n  return dispatch => {\n    axios\n      .get(\"api/app/chat/chats\")\n      .then(response => {\n        dispatch({\n          type: \"GET_CONTACTS\",\n          contacts: response.data.contacts,\n          chats: response.data.chats\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const getContactChats = () => {\n  return dispatch => {\n    axios\n      .get(\"api/app/chat/chat-contacts\")\n      .then(response => {\n        dispatch({\n          type: \"GET_CHAT_CONTACTS\",\n          chats: response.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const togglePinned = (id, value) => {\n  return dispatch => {\n    axios\n      .post(\"/api/apps/chat/set-pinned/\", {\n        contactId: id,\n        value\n      })\n      .then(response => {\n        dispatch({\n          type: \"SET_PINNED\",\n          id,\n          value\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport const sendMessage = (id, isPinned, text) => {\n  if (text.length > 0) {\n    return dispatch => {\n      let newMsg = {\n        textContent: text,\n        isSent: true,\n        isSeen: false,\n        time: new Date().toString()\n      }\n      axios\n        .post(\"/api/app/chat/send-message\", {\n          contactId: id,\n          message: newMsg,\n          isPinned\n        })\n        .then(response => {\n          dispatch({\n            type: \"SEND_MESSAGE\",\n            msg: newMsg,\n            id,\n            isPinned,\n            text\n          })\n          dispatch(getChats())\n        })\n        .catch(err => console.log(err))\n    }\n  } else {\n    return\n  }\n}\n\nexport const changeStatus = status => {\n  return dispatch => {\n    dispatch({\n      type: \"CHANGE_STATUS\",\n      status\n    })\n  }\n}\n\nexport const searchContacts = query => {\n  return dispatch => {\n    dispatch({\n      type: \"SEARCH_CONTACTS\",\n      query\n    })\n  }\n}\n\nexport const markSeenAllMessages = id => {\n  return dispatch => {\n    axios\n      .post(\"/api/apps/chat/mark-all-seen/\", {\n        contactId: id\n      })\n      .then(response => {\n        dispatch({\n          type: \"MARK_AS_SEEN\",\n          id\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\n","import React from \"react\"\nimport { Card, FormGroup, Input, Badge } from \"reactstrap\"\nimport { X, Search } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages\n} from \"../../../redux/actions/chat/index\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\n\nclass ChatSidebar extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.chat.chatContacts.length !== state.chatContacts ||\n      props.chat.contacts.length !== state.contacts ||\n      props.chat.chats.length !== state.chats ||\n      props.chat.status !== state.status\n    ) {\n      return {\n        chatsContacts: props.chat.chatContacts,\n        contacts: props.chat.contacts,\n        chats: props.chat.chats,\n        status: props.chat.status\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    chatsContacts: [],\n    contacts: [],\n    messages: [],\n    status: null,\n    value: \"\"\n  }\n\n  getChatContents = () => {\n    this.props.getChats()\n    this.props.getContactChats()\n  }\n\n  async componentDidMount() {\n    await this.getChatContents()\n    this.setState({\n      chatsContacts: this.props.chat.chatContacts,\n      contacts: this.props.chat.contacts,\n      chats: this.props.chat.chats,\n      status: this.props.chat.status\n    })\n  }\n\n  handleOnChange = e => {\n    this.setState({ value: e.target.value })\n    this.props.searchContacts(e.target.value)\n  }\n\n  render() {\n    const { contacts, chatsContacts, chats, status, value } = this.state\n    const contactsArr = value.length\n      ? this.props.chat.filteredContacts\n      : contacts\n    const chatsArr = value.length\n      ? this.props.chat.filteredChats\n      : chatsContacts\n    let renderContacts =\n      contactsArr.length > 0\n        ? contactsArr.map(contact => (\n            <li\n              key={contact.uid}\n              onClick={() => {\n                this.props.handleActiveChat(\n                  contact.uid,\n                  contact,\n                  chats[contact.uid]\n                )\n                this.props.markSeenAllMessages(contact.uid)\n                this.props.mainSidebar(false)\n              }}\n            >\n              <div className=\"pr-1\">\n                <span className=\"avatar avatar-md m-0\">\n                  <img\n                    src={contact.photoURL}\n                    alt={contact.displayName}\n                    height=\"38\"\n                    width=\"38\"\n                  />\n                </span>\n              </div>\n              <div className=\"user-chat-info\">\n                <div className=\"contact-info\">\n                  <h5 className=\"text-bold-600 mb-0\">{contact.displayName}</h5>\n                  <p className=\"truncate\">{contact.about}</p>\n                </div>\n              </div>\n            </li>\n          ))\n        : null\n    let renderChats =\n      chatsArr && Array.isArray(chatsArr)\n        ? chatsArr.map(chat => {\n            let lastMsg =\n                chats[chat.uid] && chats[chat.uid].msg\n                  ? chats[chat.uid].msg.slice(-1)[0]\n                  : null,\n              lastMsgDate = new Date(\n                lastMsg && lastMsg.time ? lastMsg.time : null\n              ),\n              lastMsgMonth = lastMsgDate.toLocaleString(\"default\", {\n                month: \"short\"\n              }),\n              lastMsgDay = lastMsgDate.getDate()\n            let pendingMsg =\n              chats[chat.uid] && chats[chat.uid].msg\n                ? chats[chat.uid].msg.filter(\n                    i => i.isSeen === false && i.isSent !== true\n                  ).length\n                : null\n            let activeID =\n              chats[chat.uid] !== undefined ? chats[chat.uid] : null\n            return (\n              <li\n                key={chat.uid}\n                onClick={() => {\n                  this.props.handleActiveChat(chat.uid, chat, activeID)\n                  this.props.mainSidebar(false)\n                  this.props.markSeenAllMessages(chat.uid)\n                }}\n                className={`${\n                  this.props.activeChatID === chat.uid ? \"active\" : \"\"\n                }`}\n              >\n                <div className=\"pr-1\">\n                  <span className=\"avatar avatar-md m-0\">\n                    <img\n                      src={chat.photoURL}\n                      alt={chat.displayName}\n                      height=\"38\"\n                      width=\"38\"\n                    />\n                  </span>\n                </div>\n                <div className=\"user-chat-info\">\n                  <div className=\"contact-info\">\n                    <h5 className=\"text-bold-600 mb-0\">{chat.displayName}</h5>\n                    <p className=\"truncate\">\n                      {lastMsg ? lastMsg.textContent : chat.about}\n                    </p>\n                  </div>\n                  <div className=\"contact-meta d-flex- flex-column\">\n                    <span className=\"float-right mb-25\">\n                      {lastMsgMonth + \" \" + lastMsgDay}\n                    </span>\n                    {pendingMsg > 0 ? (\n                      <div className=\"unseen-msg\">\n                        <Badge\n                          className=\"badge-md float-right\"\n                          color=\"primary\"\n                          pill\n                        >\n                          {pendingMsg}\n                        </Badge>\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n              </li>\n            )\n          })\n        : null\n    return (\n      <Card className=\"sidebar-content h-100\">\n        <span\n          className=\"sidebar-close-icon\"\n          onClick={() => this.props.mainSidebar(false)}\n        >\n          <X size={15} />\n        </span>\n        <div className=\"chat-fixed-search\">\n          <div className=\"d-flex align-items-center\">\n            <div className=\"sidebar-profile-toggle position-relative d-inline-flex\">\n              <div\n                className=\"avatar\"\n                onClick={() => this.props.handleUserSidebar(\"open\")}\n              >\n                <img src={userImg} alt=\"User Profile\" height=\"40\" width=\"40\" />\n                <span\n                  className={\n                    status === \"dnd\"\n                      ? \"avatar-status-busy\"\n                      : status === \"away\"\n                      ? \"avatar-status-away\"\n                      : status === \"offline\"\n                      ? \"avatar-status-offline\"\n                      : \"avatar-status-online\"\n                  }\n                />\n              </div>\n            </div>\n            <FormGroup className=\"position-relative has-icon-left mx-1 my-0 w-100\">\n              <Input\n                className=\"round\"\n                type=\"text\"\n                placeholder=\"Search contact or start a new chat\"\n                onChange={e => this.handleOnChange(e)}\n                value={value}\n              />\n              <div className=\"form-control-position\">\n                <Search size={15} />\n              </div>\n            </FormGroup>\n          </div>\n        </div>\n        <PerfectScrollbar\n          className=\"chat-user-list list-group\"\n          options={{\n            wheelPropagation: false\n          }}\n        >\n          <h3 className=\"primary p-1 mb-0\">Chats</h3>\n          <ul className=\"chat-users-list-wrapper media-list\">{renderChats}</ul>\n          <h3 className=\"primary p-1 mb-0\">Contacts</h3>\n          <ul className=\"chat-users-list-wrapper media-list\">\n            {renderContacts}\n          </ul>\n        </PerfectScrollbar>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, {\n  getChats,\n  getContactChats,\n  searchContacts,\n  markSeenAllMessages\n})(ChatSidebar)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Input, Button } from \"reactstrap\"\nimport { MessageSquare, Menu, Star, Send } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport { togglePinned, sendMessage } from \"../../../redux/actions/chat/index\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\n\nclass ChatLog extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.activeUser !== state.activeChat ||\n      props.activeChat !== state.activeChat\n    ) {\n      return {\n        activeUser: props.activeUser,\n        activeChat: props.activeChat\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    msg: \"\",\n    activeUser: null,\n    activeChat: null\n  }\n\n  handleSendMessage = (id, isPinned, text) => {\n    if (text.length > 0) {\n      this.props.sendMessage(id, isPinned, text)\n      this.setState({\n        msg: \"\"\n      })\n    }\n  }\n  componentDidMount() {\n    this.scrollToBottom()\n  }\n  componentDidUpdate() {\n    this.scrollToBottom()\n  }\n\n  handleTime = (time_to, time_from) => {\n    const date_time_to = new Date(Date.parse(time_to))\n    const date_time_from = new Date(Date.parse(time_from))\n    return (\n      date_time_to.getFullYear() === date_time_from.getFullYear() &&\n      date_time_to.getMonth() === date_time_from.getMonth() &&\n      date_time_to.getDate() === date_time_from.getDate()\n    )\n  }\n\n  scrollToBottom = () => {\n    const chatContainer = ReactDOM.findDOMNode(this.chatArea)\n    chatContainer.scrollTop = chatContainer.scrollHeight\n  }\n\n  render() {\n    const { activeUser } = this.state\n    let activeUserUid = activeUser && activeUser.uid ? activeUser.uid : null,\n      activeChat =\n        activeUser && activeUser.uid\n          ? this.props.chat.chats[activeUserUid]\n          : null\n\n    let renderChats =\n      activeChat && activeChat !== undefined && activeChat.msg\n        ? activeChat.msg.map((chat, i) => {\n            let renderSentTime = () => {\n              if (\n                i > 0 &&\n                !this.handleTime(chat.time, activeChat.msg[i - 1].time)\n              ) {\n                return (\n                  <div className=\"divider\">\n                    <div className=\"divider-text\">\n                      {new Date().getDate() +\n                        \" \" +\n                        new Date().toLocaleString(\"default\", {\n                          month: \"short\"\n                        })}\n                    </div>\n                  </div>\n                )\n              }\n            }\n            let renderAvatar = () => {\n              if (i > 0) {\n                if (\n                  chat.isSent === true &&\n                  activeChat.msg[i - 1].isSent !== true\n                ) {\n                  return (\n                    <div className=\"chat-avatar\">\n                      <div className=\"avatar m-0\">\n                        <img\n                          src={userImg}\n                          alt=\"chat avatar\"\n                          height=\"40\"\n                          width=\"40\"\n                        />\n                      </div>\n                    </div>\n                  )\n                } else if (chat.isSent !== true) {\n                  return (\n                    <div className=\"chat-avatar\">\n                      <div className=\"avatar m-0\">\n                        <img\n                          src={activeUser.photoURL}\n                          alt=\"chat avatar\"\n                          height=\"40\"\n                          width=\"40\"\n                        />\n                      </div>\n                    </div>\n                  )\n                } else {\n                  return \"\"\n                }\n              } else {\n                return (\n                  <div className=\"chat-avatar\">\n                    <div className=\"avatar m-0\">\n                      <img\n                        src={chat.isSent ? userImg : activeUser.photoURL}\n                        alt=\"chat avatar\"\n                        height=\"40\"\n                        width=\"40\"\n                      />\n                    </div>\n                  </div>\n                )\n              }\n            }\n            return (\n              <React.Fragment key={i}>\n                {renderSentTime()}\n                <div\n                  className={`chat ${\n                    chat.isSent !== true ? \"chat-left\" : \"chat-right\"\n                  }`}>\n                  {renderAvatar()}\n                  <div className=\"chat-body\">\n                    <div className=\"chat-content\">{chat.textContent}</div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )\n          })\n        : null\n\n    return (\n      <div className=\"content-right\">\n        <div className=\"chat-app-window\">\n          <div\n            className={`start-chat-area ${\n              activeUser !== null ? \"d-none\" : \"d-flex\"\n            }`}>\n            <span className=\"mb-1 start-chat-icon\">\n              <MessageSquare size={50} />\n            </span>\n            <h4\n              className=\"py-50 px-1 sidebar-toggle start-chat-text\"\n              onClick={() => {\n                if (this.props.mql.matches === false) {\n                  this.props.mainSidebar(true)\n                } else {\n                  return null\n                }\n              }}>\n              Start Conversation\n            </h4>\n          </div>\n          <div\n            className={`active-chat ${\n              activeUser === null ? \"d-none\" : \"d-block\"\n            }`}>\n            <div className=\"chat_navbar\">\n              <header className=\"chat_header d-flex justify-content-between align-items-center p-1\">\n                <div className=\"d-flex align-items-center\">\n                  <div\n                    className=\"sidebar-toggle d-block d-lg-none mr-1\"\n                    onClick={() => this.props.mainSidebar(true)}>\n                    <Menu size={24} />\n                  </div>\n                  <div\n                    className=\"avatar user-profile-toggle m-0 m-0 mr-1\"\n                    onClick={() => this.props.handleReceiverSidebar(\"open\")}>\n                    <img\n                      src={activeUser !== null ? activeUser.photoURL : \"\"}\n                      alt={activeUser !== null ? activeUser.displayName : \"\"}\n                      height=\"40\"\n                      width=\"40\"\n                    />\n                    <span\n                      className={`\n                    ${\n                      activeUser !== null &&\n                      activeUser.status === \"do not disturb\"\n                        ? \"avatar-status-busy\"\n                        : activeUser !== null && activeUser.status === \"away\"\n                        ? \"avatar-status-away\"\n                        : activeUser !== null && activeUser.status === \"offline\"\n                        ? \"avatar-status-offline\"\n                        : \"avatar-status-online\"\n                    }\n                    `}\n                    />\n                  </div>\n                  <h6 className=\"mb-0\">\n                    {activeUser !== null ? activeUser.displayName : \"\"}\n                  </h6>\n                </div>\n                <span\n                  className=\"favorite\"\n                  onClick={() => {\n                    if (activeChat) {\n                      this.props.togglePinned(\n                        activeUser.uid,\n                        !activeChat.isPinned\n                      )\n                    }\n                  }}>\n                  <Star\n                    size={22}\n                    stroke={\n                      activeChat && activeChat.isPinned === true\n                        ? \"#FF9F43\"\n                        : \"#626262\"\n                    }\n                  />\n                </span>\n              </header>\n            </div>\n            <PerfectScrollbar\n              className=\"user-chats\"\n              options={{\n                wheelPropagation: false\n              }}\n              ref={el => {\n                this.chatArea = el\n              }}>\n              <div className=\"chats\">{renderChats}</div>\n            </PerfectScrollbar>\n            <div className=\"chat-app-form\">\n              <form\n                className=\"chat-app-input d-flex align-items-center\"\n                onSubmit={e => {\n                  e.preventDefault()\n                  this.handleSendMessage(\n                    activeUser.uid,\n                    false,\n                    this.state.msg,\n                    activeUser\n                  )\n                }}>\n                <Input\n                  type=\"text\"\n                  className=\"message mr-1 ml-50\"\n                  placeholder=\"Type your message\"\n                  value={this.state.msg}\n                  onChange={e => {\n                    e.preventDefault()\n                    this.setState({\n                      msg: e.target.value\n                    })\n                  }}\n                />\n                <Button color=\"primary\">\n                  <Send className=\"d-lg-none\" size={15} />\n                  <span className=\"d-lg-block d-none\">Send</span>\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, { togglePinned, sendMessage })(ChatLog)\n","import React from \"react\"\nimport { X } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nclass ReceiverProfile extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.activeUser !== state.activeUser) {\n      return {\n        activeUser: props.activeUser\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    activeUser: null\n  }\n\n  render() {\n    const { activeUser } = this.state\n    return (\n      <div\n        className={`user-profile-sidebar ${\n          this.props.receiverProfile ? \"show\" : null\n        }`}\n      >\n        <header className=\"user-profile-header\">\n          <span\n            className=\"close-icon\"\n            onClick={() => this.props.handleReceiverSidebar(\"close\")}\n          >\n            <X size={24} />\n          </span>\n          <div className=\"header-profile-sidebar\">\n            <div className=\"avatar\">\n              <img\n                src={activeUser !== null ? activeUser.photoURL : null}\n                alt={activeUser !== null ? activeUser.displayName : null}\n                height=\"66\"\n                width=\"66\"\n              />\n              <span\n                className={`${\n                  activeUser !== null && activeUser.status === \"do not disturb\"\n                    ? \"avatar-status-busy\"\n                    : activeUser !== null && activeUser.status === \"away\"\n                    ? \"avatar-status-away\"\n                    : activeUser !== null && activeUser.status === \"offline\"\n                    ? \"avatar-status-offline\"\n                    : \"avatar-status-online\"\n                } avatar-status-lg`}\n              />\n            </div>\n            <h4 className=\"chat-user-name\">\n              {activeUser !== null ? activeUser.displayName : null}\n            </h4>\n          </div>\n        </header>\n        <PerfectScrollbar\n          className=\"user-profile-sidebar-area p-2\"\n          options={{\n            wheelPropagation: false\n          }}\n        >\n          <h6>About</h6>\n          <p>{activeUser !== null ? activeUser.about : null}</p>\n        </PerfectScrollbar>\n      </div>\n    )\n  }\n}\nexport default ReceiverProfile\n","import React from \"react\"\nimport { X } from \"react-feather\"\nimport { Input } from \"reactstrap\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport { changeStatus } from \"../../../redux/actions/chat/index\"\nimport Radio from \"../../../components/@vuexy/radio/RadioVuexy\"\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\nclass UserSidebar extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.chat.status !== state.status) {\n      return {\n        status: props.chat.status\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n\n  state = {\n    value:\n      \"Dessert chocolate cake lemon drops jujubes. Biscuit cupcake ice cream bear claw brownie brownie marshmallow.\",\n    status: null\n  }\n\n  render() {\n    const status = this.state.status\n    return (\n      <div\n        className={`chat-profile-sidebar ${\n          this.props.userProfile ? \"show\" : null\n        }`}\n      >\n        <header className=\"chat-profile-header\">\n          <div\n            className=\"close-icon\"\n            onClick={() => this.props.handleUserSidebar(\"close\")}\n          >\n            <X size={24} />\n          </div>\n          <div className=\"header-profile-sidebar\">\n            <div className=\"avatar\">\n              <img src={userImg} alt=\"User Profile\" height=\"66\" width=\"66\" />\n              <span\n                className={`${\n                  status === \"offline\"\n                    ? \"avatar-status-offline\"\n                    : status === \"dnd\"\n                    ? \"avatar-status-busy\"\n                    : status === \"away\"\n                    ? \"avatar-status-away\"\n                    : \"avatar-status-online\"\n                } avatar-status-lg`}\n              />\n            </div>\n            <h4 className=\"chat-user-name\">John Doe</h4>\n          </div>\n        </header>\n        <div className=\"profile-sidebar-area\">\n          <PerfectScrollbar\n            className=\"scroll-area\"\n            options={{\n              wheelPropagation: false\n            }}\n          >\n            <h6>About</h6>\n            <div className=\"about-user\">\n              <Input\n                type=\"textarea\"\n                name=\"text\"\n                id=\"userAbout\"\n                rows=\"5\"\n                value={this.state.value}\n                maxLength=\"120\"\n                onChange={e => this.setState({ value: e.target.value })}\n              />\n              <small className=\"counter-value float-right\">\n                {`${this.state.value.length} / 120`}\n              </small>\n            </div>\n            <h3 className=\"mt-3\">Status</h3>\n            <ul className=\"list-unstyled user-status mb-0\">\n              <li className=\"pb-50\">\n                <Radio\n                  label=\"Active\"\n                  color=\"success\"\n                  defaultChecked={true}\n                  name=\"userStatus\"\n                  onClick={() => this.props.changeStatus(\"active\")}\n                />\n              </li>\n              <li className=\"pb-50\">\n                <Radio\n                  label=\"Do Not Disturb\"\n                  color=\"danger\"\n                  defaultChecked={false}\n                  name=\"userStatus\"\n                  onClick={() => this.props.changeStatus(\"dnd\")}\n                />\n              </li>\n              <li className=\"pb-50\">\n                <Radio\n                  label=\"Away\"\n                  color=\"warning\"\n                  defaultChecked={false}\n                  name=\"userStatus\"\n                  onClick={() => this.props.changeStatus(\"away\")}\n                />\n              </li>\n              <li className=\"pb-50\">\n                <Radio\n                  label=\"Offline\"\n                  color=\"secondary\"\n                  defaultChecked={false}\n                  name=\"userStatus\"\n                  onClick={() => this.props.changeStatus(\"offline\")}\n                />\n              </li>\n            </ul>\n          </PerfectScrollbar>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    chat: state.chatApp.chats\n  }\n}\nexport default connect(mapStateToProps, { changeStatus })(UserSidebar)\n","import React from \"react\"\nimport Sidebar from \"react-sidebar\"\nimport { ContextLayout } from \"../../../utility/context/Layout\"\nimport ChatSidebarContent from \"./ChatSidebar\"\nimport ChatLog from \"./ChatLog\"\nimport ReceiverSidebar from \"./receiverProfile\"\nimport UserSidebar from \"./UserSidebar\"\nimport \"../../../assets/scss/pages/app-chat.scss\"\nconst mql = window.matchMedia(`(min-width: 992px)`)\n\nclass Chat extends React.Component {\n  state = {\n    userProfile: false,\n    sidebarDocked: mql.matches,\n    sidebarOpen: false,\n    activeChatID: null,\n    activeChat: null,\n    activeUser: null,\n    receiverProfile: false,\n    userSidebar: false\n  }\n  // mounted = false\n  handleUserSidebar = status => {\n    if (status === \"open\") {\n      this.setState({\n        userProfile: true\n      })\n    } else {\n      this.setState({\n        userProfile: false\n      })\n    }\n  }\n  handleActiveChat = (id, user, chats) => {\n    this.setState({\n      activeChatID: id,\n      activeUser: user,\n      activeChat: chats\n    })\n  }\n\n  UNSAFE_componentWillMount() {\n    mql.addListener(this.mediaQueryChanged)\n  }\n\n  componentWillUnmount() {\n    mql.removeListener(this.mediaQueryChanged)\n  }\n\n  onSetSidebarOpen = open => {\n    this.setState({ sidebarOpen: open })\n  }\n\n  mediaQueryChanged = () => {\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\n  }\n\n  handleReceiverSidebar = status => {\n    status === \"open\"\n      ? this.setState({\n          receiverProfile: true\n        })\n      : this.setState({\n          receiverProfile: false\n        })\n  }\n\n  handleUserSidebar = status => {\n    status === \"open\"\n      ? this.setState({\n          userSidebar: true\n        })\n      : this.setState({\n          userSidebar: false\n        })\n  }\n\n  render() {\n    return (\n      <div className=\"chat-application position-relative\">\n        <div\n          className={`chat-overlay ${\n            this.state.receiverProfile ||\n            this.state.userSidebar ||\n            this.state.sidebarOpen\n              ? \"show\"\n              : \"d-none\"\n          }`}\n          onClick={() => {\n            this.handleReceiverSidebar(\"close\")\n            this.handleUserSidebar(\"close\")\n            this.onSetSidebarOpen(false)\n          }}\n        />\n        <ContextLayout.Consumer>\n          {context => (\n            <Sidebar\n              sidebar={\n                <ChatSidebarContent\n                  activeChatID={this.state.activeChatID}\n                  handleActiveChat={this.handleActiveChat}\n                  handleUserSidebar={this.handleUserSidebar}\n                  mainSidebar={this.onSetSidebarOpen}\n                />\n              }\n              docked={this.state.sidebarDocked}\n              open={this.state.sidebarOpen}\n              touch={false}\n              sidebarClassName=\"chat-sidebar\"\n              contentClassName=\"sidebar-children d-none\"\n              pullRight={context.state.direction === \"rtl\"}>\n              \"\"\n            </Sidebar>\n          )}\n        </ContextLayout.Consumer>\n        <UserSidebar\n          userProfile={this.state.userSidebar}\n          handleUserSidebar={this.handleUserSidebar}\n        />\n        <ChatLog\n          activeChat={this.state.activeChat}\n          activeUser={this.state.activeUser}\n          handleReceiverSidebar={this.handleReceiverSidebar}\n          mainSidebar={this.onSetSidebarOpen}\n          mql={mql}\n          handleActiveChat={this.handleActiveChat}\n        />\n        <ReceiverSidebar\n          activeUser={this.state.activeUser}\n          receiverProfile={this.state.receiverProfile}\n          handleReceiverSidebar={this.handleReceiverSidebar}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Chat\n"],"sourceRoot":""}