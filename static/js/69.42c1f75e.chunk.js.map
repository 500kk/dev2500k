{"version":3,"sources":["extensions/extensionsHeader.js","extensions/dropzone/DropzoneBasic.js","extensions/dropzone/DropzoneAccept.js","extensions/dropzone/DropzoneProgrammatically.js","extensions/dropzone/DropzoneDisabled.js","extensions/dropzone/Dropzone.js"],"names":["ExtensionsHeader","className","sm","data-tour","this","props","title","link","href","target","rel","subTitle","React","Component","BasicDropzone","useState","files","setFiles","useDropzone","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","key","name","src","alt","useEffect","forEach","revokeObjectURL","DropzoneBasic","Card","CardHeader","CardTitle","CardBody","DropzoneAccepted","acceptedFilesItems","DropzoneAccept","ProgrammaticallyDropzone","noClick","noKeyboard","open","Button","Ripple","color","outline","onClick","DropzoneProgrammatically","Disabled","disabled","size","DropzoneDisabled","Uploader","Fragment","Row","Col","lg","md"],"mappings":"2NAIMA,E,uKAEF,OACE,kBAAC,IAAD,CAAKC,UAAU,QACb,kBAAC,IAAD,CAAKC,GAAG,KAAKD,UAAU,SACrB,uBACEA,UAAU,qCACVE,YAAU,mBAETC,KAAKC,MAAMC,OAEbF,KAAKC,MAAME,KAAO,uBAAGC,KAAMJ,KAAKC,MAAME,KAAME,OAAO,SAASC,IAAI,uBAC9DN,KAAKC,MAAMM,UACP,uBAAGV,UAAU,gBAAgBG,KAAKC,MAAMM,gB,GAb1BC,IAAMC,WAoBtBb,O,qMCpBf,SAASc,EAAcT,GAAQ,IAAD,EACFU,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAEYC,YAAY,CAClDC,OAAQ,UACRC,OAAQ,SAAAC,GACNJ,EACEI,EAAcC,KAAI,SAAAC,GAAI,OACpBC,OAAOC,OAAOF,EAAM,CAClBG,QAASC,IAAIC,gBAAgBL,YAN/BM,EAFoB,EAEpBA,aAAcC,EAFM,EAENA,cAahBC,EAASf,EAAMM,KAAI,SAAAC,GAAI,OAC3B,yBAAKtB,UAAU,WAAW+B,IAAKT,EAAKU,MAClC,yBAAKhC,UAAU,kBACb,yBAAKiC,IAAKX,EAAKG,QAASzB,UAAU,SAASkC,IAAKZ,EAAKU,YAa3D,OARAG,qBACE,kBAAM,WAEJpB,EAAMqB,SAAQ,SAAAd,GAAI,OAAII,IAAIW,gBAAgBf,EAAKG,eAEjD,CAACV,IAID,iCACE,wBAASa,EAAa,CAAE5B,UAAW,aACjC,0BAAW6B,KACX,uBAAG7B,UAAU,QAAb,4DAIF,2BAAOA,UAAU,mBAAmB8B,I,IAoB3BQ,E,uKAbX,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eAEF,kBAACC,EAAA,EAAD,KACE,kBAAC7B,EAAD,Y,GARkBF,IAAMC,WC5ClC,SAAS+B,EAAiBvC,GAAQ,IAAD,EACLU,mBAAS,IADJ,mBACxBC,EADwB,KACjBC,EADiB,OAO3BC,YAAY,CACdC,OAAQ,wBACRC,OAAQ,SAAAC,GACNJ,EACEI,EAAcC,KAAI,SAAAC,GAAI,OACpBC,OAAOC,OAAOF,EAAM,CAClBG,QAASC,IAAIC,gBAAgBL,YAVrCF,EAH6B,EAG7BA,cAEAQ,EAL6B,EAK7BA,aACAC,EAN6B,EAM7BA,cAaIC,EAASf,EAAMM,KAAI,SAAAC,GAAI,OAC3B,yBAAKtB,UAAU,WAAW+B,IAAKT,EAAKU,MAClC,yBAAKhC,UAAU,kBACb,yBAAKiC,IAAKX,EAAKG,QAASzB,UAAU,SAASkC,IAAKZ,EAAKU,YAI3DG,qBACE,kBAAM,WAEJpB,EAAMqB,SAAQ,SAAAd,GAAI,OAAII,IAAIW,gBAAgBf,EAAKG,eAEjD,CAACV,IAGH,IAAM6B,EAAqBxB,EAAcC,KAAI,SAAAC,GAAI,OAC/C,2BAAOtB,UAAU,wBAAwB8B,MAS3C,OACE,6BAAS9B,UAAU,QACjB,wBAAS4B,EAAa,CAAE5B,UAAW,aACjC,0BAAW6B,KACX,uBAAG7B,UAAU,QACX,iFAGJ,+BAAQ4C,I,IAoBCC,E,uKAbX,OACE,kBAACN,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,6BAEF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAD,Y,GARmBhC,IAAMC,W,QCzDnC,SAASkC,EAAyB1C,GAAQ,IAAD,EACbU,mBAAS,IADI,mBAChCC,EADgC,KACzBC,EADyB,OAEOC,YAAY,CACxDC,OAAQ,UACR6B,SAAS,EACTC,YAAY,EACZ7B,OAAQ,SAAAC,GACNJ,EACEI,EAAcC,KAAI,SAAAC,GAAI,OACpBC,OAAOC,OAAOF,EAAM,CAClBG,QAASC,IAAIC,gBAAgBL,YAR/BM,EAF+B,EAE/BA,aAAcC,EAFiB,EAEjBA,cAAeoB,EAFE,EAEFA,KAe/BnB,EAASf,EAAMM,KAAI,SAAAC,GAAI,OAC3B,yBAAKtB,UAAU,WAAW+B,IAAKT,EAAKU,MAClC,yBAAKhC,UAAU,kBACb,yBAAKiC,IAAKX,EAAKG,QAASzB,UAAU,SAASkC,IAAKZ,EAAKU,YAa3D,OARAG,qBACE,kBAAM,WAEJpB,EAAMqB,SAAQ,SAAAd,GAAI,OAAII,IAAIW,gBAAgBf,EAAKG,eAEjD,CAACV,IAID,iCACE,wBAASa,EAAa,CAAE5B,UAAW,aACjC,0BAAW6B,KACX,uBAAG7B,UAAU,QAAb,4DAIF,kBAACkD,EAAA,EAAOC,OAAR,CAAeC,MAAM,UAAUC,SAAO,EAACrD,UAAU,OAAOsD,QAASL,GAAjE,oBAGA,2BAAOjD,UAAU,mBAAmB8B,I,IAoB3ByB,E,uKAbX,OACE,kBAAChB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,8CAEF,kBAACC,EAAA,EAAD,KACE,kBAACI,EAAD,Y,GAR6BnC,IAAMC,WCjD7C,SAAS4C,EAASpD,GAAQ,IAAD,EACgCa,YAAY,CACjEwC,UAAU,IADJrC,EADe,EACfA,cAAeQ,EADA,EACAA,aAAcC,EADd,EACcA,cAI/Bd,EAAQK,EAAcC,KAAI,SAAAC,GAAI,OAClC,wBAAIS,IAAKT,EAAKU,MACXV,EAAKU,KADR,MACiBV,EAAKoC,KADtB,aAKF,OACE,6BAAS1D,UAAU,QACjB,wBAAS4B,EAAa,CAAE5B,UAAW,sBACjC,0BAAW6B,KACX,uBAAG7B,UAAU,QAAb,4DAIF,+BAAQe,I,IAmBC4C,E,uKAbX,OACE,kBAACpB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,kBAEF,kBAACC,EAAA,EAAD,CAAU1C,UAAU,QAClB,kBAACwD,EAAD,Y,GARqB7C,IAAMC,WCjB/BgD,G,+KAEF,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CACExD,MAAM,iBACNK,SAAS,6CACTJ,KAAK,kCAGP,kBAACwD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,EAAD,MAAkB,KAEpB,kBAACF,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,EAAD,MAAmB,KAErB,kBAACF,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,EAAD,MAA6B,KAE/B,kBAACF,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,MACb,kBAAC,EAAD,MAAqB,W,GArBVtD,IAAMC,YA6BdgD","file":"static/js/69.42c1f75e.chunk.js","sourcesContent":["import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\n// import { Star } from \"react-feather\"\n\nclass ExtensionsHeader extends React.Component {\n  render() {\n    return (\n      <Row className=\"mb-2\">\n        <Col sm=\"12\" className=\"ml-50\">\n          <p\n            className=\"font-medium-5 mt-1 extension-title\"\n            data-tour=\"extension-title\"\n          >\n            {this.props.title}\n          </p>\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.props.subTitle}\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \n          }\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default ExtensionsHeader\n","import React, { useState, useEffect } from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\"\nimport { useDropzone } from \"react-dropzone\"\n\nfunction BasicDropzone(props) {\n  const [files, setFiles] = useState([])\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    onDrop: acceptedFiles => {\n      setFiles(\n        acceptedFiles.map(file =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      )\n    }\n  })\n\n  const thumbs = files.map(file => (\n    <div className=\"dz-thumb\" key={file.name}>\n      <div className=\"dz-thumb-inner\">\n        <img src={file.preview} className=\"dz-img\" alt={file.name} />\n      </div>\n    </div>\n  ))\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview))\n    },\n    [files]\n  )\n\n  return (\n    <section>\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p className=\"mx-1\">\n          Drag 'n' drop some files here, or click to select files\n        </p>\n      </div>\n      <aside className=\"thumb-container\">{thumbs}</aside>\n    </section>\n  )\n}\n\nclass DropzoneBasic extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Basic</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <BasicDropzone />\n        </CardBody>\n      </Card>\n    )\n  }\n}\n\nexport default DropzoneBasic\n","import React, { useState, useEffect } from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\"\nimport { useDropzone } from \"react-dropzone\"\n\nfunction DropzoneAccepted(props) {\n  const [files, setFiles] = useState([])\n  const {\n    acceptedFiles,\n    // rejectedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    onDrop: acceptedFiles => {\n      setFiles(\n        acceptedFiles.map(file =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      )\n    }\n  })\n  const thumbs = files.map(file => (\n    <div className=\"dz-thumb\" key={file.name}>\n      <div className=\"dz-thumb-inner\">\n        <img src={file.preview} className=\"dz-img\" alt={file.name} />\n      </div>\n    </div>\n  ))\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview))\n    },\n    [files]\n  )\n\n  const acceptedFilesItems = acceptedFiles.map(file => (\n    <aside className=\"thumb-container mb-1\">{thumbs}</aside>\n  ))\n\n  // const rejectedFilesItems = rejectedFiles.map(file => (\n  //   <div key={file.path}>\n  //     {file.path} - {file.size} bytes\n  //   </div>\n  // ))\n\n  return (\n    <section className=\"pb-1\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p className=\"mx-1\">\n          <em>(Only *.jpeg and *.png images will be accepted)</em>\n        </p>\n      </div>\n      <aside>{acceptedFilesItems}</aside>\n    </section>\n  )\n}\n\nclass DropzoneAccept extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Specific File Types</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <DropzoneAccepted />\n        </CardBody>\n      </Card>\n    )\n  }\n}\n\nexport default DropzoneAccept\n","import React, { useState, useEffect } from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport { useDropzone } from \"react-dropzone\"\n\nfunction ProgrammaticallyDropzone(props) {\n  const [files, setFiles] = useState([])\n  const { getRootProps, getInputProps, open } = useDropzone({\n    accept: \"image/*\",\n    noClick: true,\n    noKeyboard: true,\n    onDrop: acceptedFiles => {\n      setFiles(\n        acceptedFiles.map(file =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      )\n    }\n  })\n\n  const thumbs = files.map(file => (\n    <div className=\"dz-thumb\" key={file.name}>\n      <div className=\"dz-thumb-inner\">\n        <img src={file.preview} className=\"dz-img\" alt={file.name} />\n      </div>\n    </div>\n  ))\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview))\n    },\n    [files]\n  )\n\n  return (\n    <section>\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p className=\"mx-1\">\n          Drag 'n' drop some files here, or click to select files\n        </p>\n      </div>\n      <Button.Ripple color=\"primary\" outline className=\"my-1\" onClick={open}>\n        Open File Dialog\n      </Button.Ripple>\n      <aside className=\"thumb-container\">{thumbs}</aside>\n    </section>\n  )\n}\n\nclass DropzoneProgrammatically extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Opening File Dialog Programmatically</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <ProgrammaticallyDropzone />\n        </CardBody>\n      </Card>\n    )\n  }\n}\n\nexport default DropzoneProgrammatically\n","import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle } from \"reactstrap\"\nimport { useDropzone } from \"react-dropzone\"\n\nfunction Disabled(props) {\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    disabled: true\n  })\n\n  const files = acceptedFiles.map(file => (\n    <li key={file.name}>\n      {file.name} - {file.size} bytes\n    </li>\n  ))\n\n  return (\n    <section className=\"pb-5\">\n      <div {...getRootProps({ className: \"dropzone disabled\" })}>\n        <input {...getInputProps()} />\n        <p className=\"mx-1\">\n          Drag 'n' drop some files here, or click to select files\n        </p>\n      </div>\n      <aside>{files}</aside>\n    </section>\n  )\n}\nclass DropzoneDisabled extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Disabled</CardTitle>\n        </CardHeader>\n        <CardBody className=\"pb-3\">\n          <Disabled />\n        </CardBody>\n      </Card>\n    )\n  }\n}\n\nexport default DropzoneDisabled\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport ExtensionsHeader from \"../extensionsHeader\"\nimport DropzoneBasic from \"./DropzoneBasic\"\nimport DropzoneAccept from \"./DropzoneAccept\"\nimport DropzoneProgrammatically from \"./DropzoneProgrammatically\"\nimport DropzoneDisabled from \"./DropzoneDisabled\"\n\nimport \"../../assets/scss/plugins/extensions/dropzone.scss\"\n\nclass Uploader extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ExtensionsHeader\n          title=\"React Dropzone\"\n          subTitle=\"Simple HTML5 drag-drop zone with React.js.\"\n          link=\"https://react-dropzone.js.org\"\n        />\n\n        <Row>\n          <Col lg=\"6\" md=\"12\">\n            <DropzoneBasic />{\" \"}\n          </Col>\n          <Col lg=\"6\" md=\"12\">\n            <DropzoneAccept />{\" \"}\n          </Col>\n          <Col lg=\"6\" md=\"12\">\n            <DropzoneProgrammatically />{\" \"}\n          </Col>\n          <Col lg=\"6\" md=\"12\">\n            <DropzoneDisabled />{\" \"}\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Uploader\n"],"sourceRoot":""}