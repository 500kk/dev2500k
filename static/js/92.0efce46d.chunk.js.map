{"version":3,"sources":["../node_modules/prismjs/components/prism-jsx.min.js","components/@vuexy/autoComplete/AutoCompleteSourceCode.js","components/@vuexy/autoComplete/AutoCompleteBasic.js","components/@vuexy/autoComplete/AutoCompleteAjax.js","components/@vuexy/autoComplete/AutoCompleteSections.js","components/@vuexy/autoComplete/AutoCompleteRender.js","components/@vuexy/autoComplete/AutoCompleteSuggestions.js","components/@vuexy/autoComplete/AutoCompleteLimit.js","components/@vuexy/autoComplete/AutoComplete.js"],"names":["i","t","util","clone","languages","javascript","jsx","extend","tag","pattern","inside","insertBefore","spread","punctuation","script","alias","rest","o","content","map","join","hooks","add","language","p","n","e","length","a","s","type","tagName","pop","push","openedBraces","g","splice","Token","tokens","Prism","basicExample","className","sectionExample","ajaxExample","customRenderExample","defaultSuggestionsExample","searchLimitExample","AutoCompleteBasic","state","activeTab","suggestions","title","toggleTab","tab","setState","Fragment","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","this","onClick","size","CardBody","TabContent","TabPane","tabId","filterKey","suggestionLimit","placeholder","React","Component","AutoCompleteAjax","axios","get","then","response","data","autoComplete","AutoCompleteSections","groupTitle","filterHeaderKey","grouped","AutoCompleteRender","name","img","img1","img2","img3","img4","img6","img5","customRender","suggestion","filteredData","activeSuggestion","onSuggestionItemClick","onSuggestionItemHover","indexOf","key","onMouseEnter","src","alt","height","width","AutoCompleteDefaultSuggestions","defaultSuggestions","AutoCompleteSearchLimit","AutoComplete","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg","AutoCompleteSuggestions"],"mappings":"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","file":"static/js/92.0efce46d.chunk.js","sourcesContent":["!function(i){var t=i.util.clone(i.languages.javascript);i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=/<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:$-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i,i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:/\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,inside:{punctuation:/\\.{3}|[{}.]/,\"attr-value\":/\\w+/}}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"attr-value\",{script:{pattern:/=(?:\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,inside:{\"script-punctuation\":{pattern:/^=(?={)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},p=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&p(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||p(t.tokens)})}(Prism);","import React from \"react\"\n\nexport const basicExample = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`import React from \"react\"\nimport AutoComplete from \"./AutoCompleteBasic\"\n\nclass AutoCompleteBasic extends React.Component {\n  state = {\n    suggestions: [\n      {\n        title: \"React.js\"\n      },\n      {\n        title: \"Angular.js\"\n      },\n      {\n        title: \"Javascript\"\n      }\n      ...\n    ]\n  }\n\n  render() {\n    return(\n        <AutoComplete suggestions={this.state.suggestions} \n        className=\"form-control\" \n        filterKey=\"title\" \n        suggestionLimit={4} \n        defaultSuggestions={true}\n      />\n    )}}\n\nexport default AutoCompleteBasic\n`}\n    </code>\n  </pre>\n)\n\nexport const sectionExample = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`import React from \"react\"\nimport AutoComplete from \"./AutoCompleteBasic\"\n\nclass AutoCompleteSections extends React.Component {\n  state = {\n    suggestions: [\n      {\n        groupTitle: \"1970s\",\n        data: [\n          {\n            title: \"C\",\n          }\n        ]\n      },\n      {\n        groupTitle: \"1980s\",\n        data: [\n          {\n            title: \"C++\",\n          },\n          {\n            title: \"Perl\",\n          }\n        ]\n      },\n      ...\n    ]\n  }\n\n  render() {\n    return(\n        <AutoComplete suggestions={this.state.suggestions} \n        suggestions={this.state.suggestions}\n        className=\"form-control\"\n        filterKey=\"title\"\n        filterHeaderKey=\"groupTitle\"\n        grouped={true}\n      />\n    )}}\n\nexport default AutoCompleteSections\n`}\n    </code>\n  </pre>\n)\n\nexport const ajaxExample = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`import React from \"react\"\nimport AutoComplete from \"./AutoCompleteBasic\"\n\nclass AutoCompleteAjax extends React.Component {\n  state = {\n    suggestions: []\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"/api/autocomplete/data\")\n      .then(response =>\n        this.setState({ suggestions: response.data.autoComplete })\n      )\n  }\n\n  render() {\n    return(\n        <AutoComplete suggestions={this.state.suggestions} \n        suggestions={this.state.suggestions}\n        className=\"form-control\"\n        filterKey=\"title\"\n        suggestionLimit={4}\n      />\n    )}}\n\nexport default AutoCompleteAjax\n`}\n    </code>\n  </pre>\n)\n\nexport const customRenderExample = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`import React from \"react\"\nimport AutoComplete from \"./AutoCompleteBasic\"\nimport img1 from \"../../../assets/img/portrait/small/avatar-s-1.jpg\"\nimport img2 from \"../../../assets/img/portrait/small/avatar-s-2.jpg\"\nimport img3 from \"../../../assets/img/portrait/small/avatar-s-3.jpg\"      \nimport img4 from \"../../../assets/img/portrait/small/avatar-s-4.jpg\"      \nimport img5 from \"../../../assets/img/portrait/small/avatar-s-5.jpg\"      \nimport img6 from \"../../../assets/img/portrait/small/avatar-s-6.jpg\"      \n\nclass AutoCompleteRender extends React.Component {\n  state = {\n    suggestions: [\n      {\n        name: \"Jake Shelton\",\n        img: img1\n      },\n      {\n        name: \"Edith Baldwin\",\n        img: img2\n      },\n      {\n        name: \"Jennifer Wolfe\",\n        img: img3\n      },\n      {\n        name: \"Emily Washington\",\n        img: img4\n      },\n      {\n        name: \"Heather Green\",\n        img: img6\n      },\n      {\n        name: \"Brian Moore\",\n        img: img5\n      }\n    ]\n  }\n\n  render() {\n    return(\n        <AutoComplete\n          suggestions={this.state.suggestions}\n          className=\"form-control\"\n          filterKey=\"name\"\n          customRender={(\n            suggestion,\n            i,\n            filteredData,\n            activeSuggestion,\n            onSuggestionItemClick,\n            onSuggestionItemHover\n          ) => (\n            <li\n              className={classnames(\"suggestion-item\", {\n                active:\n                  filteredData.indexOf(suggestion) === activeSuggestion\n              })}\n              key={i}\n              onMouseEnter={() =>\n                onSuggestionItemHover(filteredData.indexOf(suggestion))\n              }\n              onClick={e => {\n                onSuggestionItemClick(null, e)\n              }}\n            >\n              <img\n                src={suggestion.img}\n                alt={suggestion.name}\n                height=\"32\"\n                width=\"32\"\n                className=\"mr-1\"\n              />\n              <span>{suggestion.name}</span>\n            </li>\n          )}\n        />\n    )}}\n\nexport default AutoCompleteRender\n`}\n    </code>\n  </pre>\n)\n\nexport const defaultSuggestionsExample = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`import React from \"react\"\nimport AutoComplete from \"./AutoCompleteBasic\"\n\nclass AutoCompleteDefaultSuggestions extends React.Component {\n  state = {\n    suggestions: [\n      {\n        title: \"React.js\"\n      },\n      {\n        title: \"Angular.js\"\n      },\n      {\n        title: \"Javascript\"\n      }\n      ...\n    ]\n  }\n\n  render() {\n    return(\n        <AutoComplete\n        suggestions={this.state.suggestions}\n        className=\"form-control\"\n        filterKey=\"title\"\n        suggestionLimit={4}\n        defaultSuggestions={true}\n      />\n    )}}\n\nexport default AutoCompleteDefaultSuggestions\n`}\n    </code>\n  </pre>\n)\n\nexport const searchLimitExample = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`import React from \"react\"\nimport AutoComplete from \"./AutoCompleteBasic\"\n\nclass AutoCompleteSearchLimit extends React.Component {\n  state = {\n    suggestions: [\n      {\n        title: \"React.js\"\n      },\n      {\n        title: \"Angular.js\"\n      },\n      {\n        title: \"Javascript\"\n      }\n      ...\n    ]\n  }\n\n  render() {\n    return(\n        <AutoComplete\n        suggestions={this.state.suggestions}\n        className=\"form-control\"\n        filterKey=\"title\"\n        suggestionLimit={2}\n      />\n    )}}\n\nexport default AutoCompleteSearchLimit\n`}\n    </code>\n  </pre>\n)\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport AutoComplete from \"./AutoCompleteComponent\"\nimport { basicExample } from \"./AutoCompleteSourceCode\"\n\nclass AutoCompleteBasic extends React.Component {\n  state = {\n    activeTab: \"1\",\n    suggestions: [\n      {\n        title: \"React.js\"\n      },\n      {\n        title: \"Angular.js\"\n      },\n      {\n        title: \"Javascript\"\n      },\n      {\n        title: \"Vue.js\"\n      },\n      {\n        title: \"HTML\"\n      },\n      {\n        title: \"CSS\"\n      },\n      {\n        title: \"SCSS\"\n      },\n      {\n        title: \"PHP\"\n      },\n      {\n        title: \"Laravel\"\n      }\n    ]\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Basic</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <AutoComplete\n                  suggestions={this.state.suggestions}\n                  className=\"form-control\"\n                  filterKey=\"title\"\n                  suggestionLimit={4}\n                  placeholder=\"Type 'a'\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {basicExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoCompleteBasic\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport axios from \"axios\"\nimport AutoComplete from \"./AutoCompleteComponent\"\nimport { ajaxExample } from \"./AutoCompleteSourceCode\"\n\nclass AutoCompleteAjax extends React.Component {\n  state = {\n    activeTab: \"1\",\n    suggestions: []\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"/api/autocomplete/data\")\n      .then(response =>\n        this.setState({ suggestions: response.data.autoComplete })\n      )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Ajax</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <AutoComplete\n                  suggestions={this.state.suggestions}\n                  className=\"form-control\"\n                  filterKey=\"title\"\n                  suggestionLimit={4}\n                  placeholder = \"Search for any of the top 250 IMDB movies\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {ajaxExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoCompleteAjax\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport AutoComplete from \"./AutoCompleteComponent\"\nimport { sectionExample } from \"./AutoCompleteSourceCode\"\n\nclass AutoCompleteSections extends React.Component {\n  state = {\n    activeTab: \"1\",\n    suggestions: [\n      {\n        groupTitle: \"1970s\",\n        data: [\n          {\n            title: \"C\"\n          }\n        ]\n      },\n      {\n        groupTitle: \"1980s\",\n        data: [\n          {\n            title: \"C++\"\n          },\n          {\n            title: \"Perl\"\n          }\n        ]\n      },\n      {\n        groupTitle: \"1990s\",\n        data: [\n          {\n            title: \"Haskell\"\n          },\n          {\n            title: \"Python\"\n          },\n          {\n            title: \"Java\"\n          },\n          {\n            title: \"Javascript\"\n          },\n          {\n            title: \"PHP\"\n          },\n          {\n            title: \"Ruby\"\n          }\n        ]\n      },\n      {\n        groupTitle: \"2000s\",\n        data: [\n          {\n            title: \"C#\"\n          },\n          {\n            title: \"Scala\"\n          },\n          {\n            title: \"Clojure\"\n          },\n          {\n            title: \"Go\"\n          }\n        ]\n      },\n      {\n        groupTitle: \"2010s\",\n        data: [\n          {\n            title: \"Elm\"\n          }\n        ]\n      }\n    ]\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Sections</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <AutoComplete\n                  suggestions={this.state.suggestions}\n                  className=\"form-control\"\n                  filterKey=\"title\"\n                  filterHeaderKey=\"groupTitle\"\n                  grouped={true}\n                  placeholder=\"Type 'c'\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {sectionExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoCompleteSections\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport AutoComplete from \"./AutoCompleteComponent\"\nimport img1 from \"../../../assets/img/portrait/small/avatar-s-1.jpg\"\nimport img2 from \"../../../assets/img/portrait/small/avatar-s-2.jpg\"\nimport img3 from \"../../../assets/img/portrait/small/avatar-s-3.jpg\"\nimport img4 from \"../../../assets/img/portrait/small/avatar-s-4.jpg\"\nimport img5 from \"../../../assets/img/portrait/small/avatar-s-5.jpg\"\nimport img6 from \"../../../assets/img/portrait/small/avatar-s-6.jpg\"\nimport { customRenderExample } from \"./AutoCompleteSourceCode\"\n\nclass AutoCompleteRender extends React.Component {\n  state = {\n    activeTab: \"1\",\n    suggestions: [\n      {\n        name: \"Jake Shelton\",\n        img: img1\n      },\n      {\n        name: \"Edith Baldwin\",\n        img: img2\n      },\n      {\n        name: \"Jennifer Wolfe\",\n        img: img3\n      },\n      {\n        name: \"Emily Washington\",\n        img: img4\n      },\n      {\n        name: \"Heather Green\",\n        img: img6\n      },\n      {\n        name: \"Brian Moore\",\n        img: img5\n      }\n    ]\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Custom Render</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <AutoComplete\n                  suggestions={this.state.suggestions}\n                  className=\"form-control\"\n                  filterKey=\"name\"\n                  placeholder=\"Type 'a'\"\n                  customRender={(\n                    suggestion,\n                    i,\n                    filteredData,\n                    activeSuggestion,\n                    onSuggestionItemClick,\n                    onSuggestionItemHover\n                  ) => (\n                    <li\n                      className={classnames(\"suggestion-item\", {\n                        active:\n                          filteredData.indexOf(suggestion) === activeSuggestion\n                      })}\n                      key={i}\n                      onMouseEnter={() =>\n                        onSuggestionItemHover(filteredData.indexOf(suggestion))\n                      }\n                      onClick={e => {\n                        onSuggestionItemClick(null, e)\n                      }}\n                    >\n                      <img\n                        src={suggestion.img}\n                        alt={suggestion.name}\n                        height=\"32\"\n                        width=\"32\"\n                        className=\"mr-1\"\n                      />\n                      <span>{suggestion.name}</span>\n                    </li>\n                  )}\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {customRenderExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoCompleteRender\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport AutoComplete from \"./AutoCompleteComponent\"\nimport { defaultSuggestionsExample } from \"./AutoCompleteSourceCode\"\n\nclass AutoCompleteDefaultSuggestions extends React.Component {\n  state = {\n    activeTab: \"1\",\n    suggestions: [\n      {\n        title: \"React.js\"\n      },\n      {\n        title: \"Angular.js\"\n      },\n      {\n        title: \"Javascript\"\n      },\n      {\n        title: \"Vue.js\"\n      },\n      {\n        title: \"HTML\"\n      },\n      {\n        title: \"CSS\"\n      },\n      {\n        title: \"SCSS\"\n      },\n      {\n        title: \"PHP\"\n      },\n      {\n        title: \"Laravel\"\n      }\n    ]\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Default Suggestions</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <AutoComplete\n                  suggestions={this.state.suggestions}\n                  className=\"form-control\"\n                  filterKey=\"title\"\n                  suggestionLimit={4}\n                  defaultSuggestions={true}\n                  placeholder=\"Type 'a'\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {defaultSuggestionsExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoCompleteDefaultSuggestions\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport AutoComplete from \"./AutoCompleteComponent\"\nimport { searchLimitExample } from \"./AutoCompleteSourceCode\"\n\nclass AutoCompleteSearchLimit extends React.Component {\n  state = {\n    activeTab: \"1\",\n    suggestions: [\n      {\n        title: \"React.js\"\n      },\n      {\n        title: \"Angular.js\"\n      },\n      {\n        title: \"Javascript\"\n      },\n      {\n        title: \"Vue.js\"\n      },\n      {\n        title: \"HTML\"\n      },\n      {\n        title: \"CSS\"\n      },\n      {\n        title: \"SCSS\"\n      },\n      {\n        title: \"PHP\"\n      },\n      {\n        title: \"Laravel\"\n      }\n    ]\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card className=\"mb-sm-0 mb-5\">\n          <CardHeader>\n            <CardTitle>Search Limit</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}>\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}>\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody className=\"pb-sm-2 pb-5\">\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <AutoComplete\n                  suggestions={this.state.suggestions}\n                  className=\"form-control\"\n                  filterKey=\"title\"\n                  suggestionLimit={2}\n                  placeholder=\"Type 'a'\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {searchLimitExample}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoCompleteSearchLimit\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\nimport AutoCompleteBasic from \"./AutoCompleteBasic\"\nimport AutoCompleteAjax from \"./AutoCompleteAjax\"\nimport AutoCompleteSections from \"./AutoCompleteSections\"\nimport AutoCompleteRender from \"./AutoCompleteRender\"\nimport AutoCompleteSuggestions from \"./AutoCompleteSuggestions\"\nimport AutoCompleteSearchLimit from \"./AutoCompleteLimit\"\nimport Prism from \"prismjs\"\nimport \"prismjs/components/prism-jsx.min\"\nclass AutoComplete extends React.Component {\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Auto Complete\"\n          breadCrumbParent=\"Extra Components\"\n          breadCrumbActive=\"Auto Complete\"\n        />\n        <Row>\n          <Col xl=\"6\" lg=\"12\">\n            <AutoCompleteBasic />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AutoCompleteSections />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AutoCompleteAjax />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AutoCompleteRender />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AutoCompleteSuggestions />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AutoCompleteSearchLimit />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default AutoComplete\n"],"sourceRoot":""}