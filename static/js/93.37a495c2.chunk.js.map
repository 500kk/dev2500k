{"version":3,"sources":["../node_modules/prismjs/components/prism-jsx.min.js","components/@vuexy/avatar/AvatarComponent.js","components/@vuexy/avatar/AvatarSourceCode.js","components/@vuexy/avatar/AvatarDefault.js","components/@vuexy/avatar/AvatarSizes.js","components/@vuexy/avatar/AvatarColors.js","components/@vuexy/avatar/AvatarBadge.js","components/@vuexy/avatar/AvatarIcons.js","components/@vuexy/avatar/AvatarStatus.js","components/@vuexy/avatar/Avatar.js"],"names":["i","t","util","clone","languages","javascript","jsx","extend","tag","pattern","inside","insertBefore","spread","punctuation","script","alias","rest","o","content","map","join","hooks","add","language","p","n","e","length","a","s","type","tagName","pop","push","openedBraces","g","splice","Token","tokens","Prism","Avatar","className","classnames","this","props","color","size","img","undefined","badgeUp","icon","Badge","badgeColor","pill","badgeText","src","alt","height","imgHeight","width","imgWidth","status","React","Component","avatarDefault","avatarSizes","avatarColors","avatarBadge","avatarIcons","avatarStatus","AvatarDefault","state","activeTab","toggleTab","tab","setState","Fragment","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","active","onClick","CardBody","TabContent","TabPane","tabId","avatarImg","AvatarSizes","AvatarColors","AvatarBadge","AvatarIcons","AvatarStatus","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg"],"mappings":"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","file":"static/js/93.37a495c2.chunk.js","sourcesContent":["!function(i){var t=i.util.clone(i.languages.javascript);i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=/<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:$-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i,i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:/\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,inside:{punctuation:/\\.{3}|[{}.]/,\"attr-value\":/\\w+/}}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"attr-value\",{script:{pattern:/=(?:\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,inside:{\"script-punctuation\":{pattern:/^=(?={)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},p=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&p(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||p(t.tokens)})}(Prism);","import React from \"react\"\nimport classnames from \"classnames\"\nimport { Badge } from \"reactstrap\"\nclass Avatar extends React.Component {\n  render() {\n    return (\n      <div\n        className={classnames(\n          `avatar ${this.props.color ? `bg-${this.props.color}` : null}  ${\n            this.props.className\n          }`,\n          {\n            \"avatar-sm\": this.props.size && this.props.size === \"sm\",\n            \"avatar-lg\": this.props.size && this.props.size === \"lg\",\n            \"avatar-xl\": this.props.size && this.props.size === \"xl\"\n          }\n        )}\n      >\n        {this.props.img === false || this.props.img === undefined ? (\n          <span\n            className={classnames(\"avatar-content\", {\n              \"position-relative\": this.props.badgeUp\n            })}\n          >\n            {this.props.content ? this.props.content : null}\n\n            {this.props.icon ? (\n              <div className=\"avatar-icon\">{this.props.icon}</div>\n            ) : null}\n            {this.props.badgeUp ? (\n              <Badge\n                color={\n                  this.props.badgeColor ? this.props.badgeColor : \"primary\"\n                }\n                className=\"badge-sm badge-up\"\n                pill\n              >\n                {this.props.badgeText ? this.props.badgeText : \"0\"}\n              </Badge>\n            ) : null}\n          </span>\n        ) : (\n          <img\n            src={this.props.img}\n            alt=\"avatarImg\"\n            height={\n              this.props.imgHeight && !this.props.size\n                ? this.props.imgHeight\n                : 32\n            }\n            width={\n              this.props.imgWidth && !this.props.size ? this.props.imgWidth : 32\n            }\n          />\n        )}\n        {this.props.status ? (\n          <span className={`avatar-status-${this.props.status}`}></span>\n        ) : null}\n      </div>\n    )\n  }\n}\nexport default Avatar\n","import React from \"react\"\n\nexport const avatarDefault = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport Avatar from \"./Avatar\"\nimport { GitHub } from \"react-feather\"\nimport avatarImg from \"../../../assets/img/portrait/small/avatar-s-20.jpg\"\n\nclass AvatarDefault extends React.Component {\n\n  render() {\n    return(\n      <Avatar className=\"mr-1\" icon={<GitHub />} />\n      <Avatar className=\"mr-1\" content=\"LD\" />\n      <Avatar className=\"mr-1\" content=\"Luisd\" />\n      <Avatar img={avatarImg} />\n    )}}\n\nexport default AvatarDefault\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarSizes = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport Avatar from \"./Avatar\"\nimport { GitHub } from \"react-feather\"\nimport avatarImg from \"../../../assets/img/portrait/small/avatar-s-20.jpg\"\n\nclass AvatarSizes extends React.Component {\n\n  render() {\n    return(\n        <Avatar className=\"mr-1\" icon={<GitHub />} size=\"sm\" />\n        <Avatar className=\"mr-1\" content=\"LD\" />\n        <Avatar className=\"mr-1\" img={avatarImg} size=\"lg\" />\n        <Avatar img={avatarImg} size=\"xl\" />\n    )}\n}\nexport default AvatarSizes\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarColors = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport Avatar from \"./Avatar\"\nclass AvatarColors extends React.Component {\n\n  render() {\n    return(\n      <Avatar color=\"primary\" className=\"mr-1\" content=\"R\" />\n      <Avatar color=\"success\" className=\"mr-1\" content=\"E\" />\n      <Avatar color=\"danger\" className=\"mr-1\" content=\"A\" />\n      <Avatar color=\"info\" className=\"mr-1\" content=\"C\" />\n      <Avatar color=\"warning\" className=\"mr-1\" content=\"T\" />\n      <Avatar color=\"dark\" content=\"X\" />\n    )}\n}\nexport default AvatarColors\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarBadge = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport Avatar from \"./Avatar\"\nimport { Badge } from \"reactstrap\"\nimport { Facebook, Instagram, Twitter } from \"react-feather\"\n\nclass AvatarBadge extends React.Component {\n\n  render() {\n    return(\n      <Avatar className=\"mr-1\" color=\"primary\" icon={<Facebook />} badgeText=\"7\" badgeColor=\"danger\" badgeUp />\n      <Avatar className=\"mr-1\" icon={<Twitter />} color=\"info\" badgeText=\"6\" badgeColor=\"danger\" badgeUp />\n      <Avatar icon={<Instagram />} color=\"success\" badgeText=\"6\" badgeColor=\"danger\" badgeUp />\n    )}\n}\nexport default AvatarBadge\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarIcons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport Avatar from \"./Avatar\"\nimport {\n  Eye,\n  Code,\n  GitHub,\n  Calendar,\n  Inbox,\n  Camera,\n  Award\n} from \"react-feather\"\n\nclass AvatarIcons extends React.Component {\n\n  render() {\n    return(\n      <Avatar color=\"primary\" className=\"mr-1\" icon={<GitHub />} />\n      <Avatar color=\"success\" className=\"mr-1\" icon={<Calendar />} />\n      <Avatar color=\"danger\" className=\"mr-1\" icon={<Inbox />} />\n      <Avatar color=\"info\" className=\"mr-1\" icon={<Camera />} />\n      <Avatar color=\"warning\" icon={<Award />} />\n    )}\n}\nexport default AvatarIcons\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarStatus = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport Avatar from \"./Avatar\"\nimport { GitHub } from \"react-feather\"\nimport avatarImg from \"../../../assets/img/portrait/small/avatar-s-20.jpg\"\n\nclass AvatarStatus extends React.Component {\n\n  render() {\n    return(\n      <Avatar className=\"mr-1\" icon={<GitHub />} status=\"online\" />\n      <Avatar className=\"mr-1\" content=\"LD\" status=\"offline\" />\n      <Avatar className=\"mr-1\" content=\"Luisd\" status=\"away\" />\n      <Avatar className=\"mr-1\" img={avatarImg} status=\"busy\" />\n    )\n  }\n}\nexport default AvatarStatus\n`}\n    </code>\n  </pre>\n)\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, GitHub } from \"react-feather\"\nimport Avatar from \"./AvatarComponent\"\nimport { avatarDefault } from \"./AvatarSourceCode\"\nimport avatarImg from \"../../../assets/img/portrait/small/avatar-s-20.jpg\"\n\nclass AvatarDefault extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Default</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use Vuexy's Avatar component and pass <code>icon</code> or{\" \"}\n              <code>content</code> or <code>img</code> to create an avatar.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Avatar className=\"mr-1\" icon={<GitHub />} />\n                <Avatar className=\"mr-1\" content=\"LD\" />\n                <Avatar className=\"mr-1\" content=\"Luisd\" />\n                <Avatar img={avatarImg} />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {avatarDefault}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AvatarDefault\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, GitHub } from \"react-feather\"\nimport Avatar from \"./AvatarComponent\"\nimport { avatarSizes } from \"./AvatarSourceCode\"\nimport avatarImg from \"../../../assets/img/portrait/small/avatar-s-20.jpg\"\n\nclass AvatarSizes extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Sizes</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>size=[sm | lg | xl]</code> prop to change avatar's size.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Avatar className=\"mr-1\" icon={<GitHub />} size=\"sm\" />\n                <Avatar className=\"mr-1\" content=\"LD\" />\n                <Avatar className=\"mr-1\" img={avatarImg} size=\"lg\" />\n                <Avatar img={avatarImg} size=\"xl\" />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {avatarSizes}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AvatarSizes\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport Avatar from \"./AvatarComponent\"\nimport { Eye, Code } from \"react-feather\"\nimport { avatarColors } from \"./AvatarSourceCode\"\n\nclass AvatarColors extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Colors</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use prop{\" \"}\n              <code>\n                color=[primary | success | danger | info | warning | dark]\n              </code>{\" \"}\n              to change background color of your avatar.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Avatar color=\"primary\" className=\"mr-1\" content=\"V\" />\n                <Avatar color=\"success\" className=\"mr-1\" content=\"U\" />\n                <Avatar color=\"danger\" className=\"mr-1\" content=\"E\" />\n                <Avatar color=\"info\" className=\"mr-1\" content=\"X\" />\n                <Avatar color=\"warning\" className=\"mr-1\" content=\"Y\" />\n                <Avatar color=\"dark\" content=\"X\" />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {avatarColors}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AvatarColors\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport Avatar from \"./AvatarComponent\"\nimport { Eye, Code, Facebook, Instagram, Twitter } from \"react-feather\"\nimport { avatarBadge } from \"./AvatarSourceCode\"\n\nclass AvatarBadge extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Badge</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              You can add notification label to avatar by passing{\" \"}\n              <code>badgeUp</code>\n              prop as true and <code>badgeText</code>,{\" \"}\n              <code>\n                badgeColor=[primary | success | danger | info | warning | dark]\n              </code>\n              .\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Avatar\n                  className=\"mr-1\"\n                  color=\"primary\"\n                  icon={<Facebook />}\n                  badgeText=\"7\"\n                  badgeColor=\"danger\"\n                  badgeUp\n                />\n                <Avatar\n                  className=\"mr-1\"\n                  color=\"info\"\n                  icon={<Twitter />}\n                  badgeText=\"6\"\n                  badgeColor=\"danger\"\n                  badgeUp\n                />\n                <Avatar\n                  icon={<Instagram />}\n                  color=\"success\"\n                  badgeText=\"6\"\n                  badgeColor=\"danger\"\n                  badgeUp\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {avatarBadge}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AvatarBadge\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport {\n  Eye,\n  Code,\n  GitHub,\n  Calendar,\n  Inbox,\n  Camera,\n  Award\n} from \"react-feather\"\nimport Avatar from \"./AvatarComponent\"\nimport { avatarIcons } from \"./AvatarSourceCode\"\n\nclass AvatarIcons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Icons</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use prop <code>icon</code> to create avatar with icon.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Avatar color=\"primary\" className=\"mr-1\" icon={<GitHub />} />\n                <Avatar color=\"success\" className=\"mr-1\" icon={<Calendar />} />\n                <Avatar color=\"danger\" className=\"mr-1\" icon={<Inbox />} />\n                <Avatar color=\"info\" className=\"mr-1\" icon={<Camera />} />\n                <Avatar color=\"warning\" icon={<Award />} />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {avatarIcons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AvatarIcons\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport Avatar from \"./AvatarComponent\"\nimport { Eye, Code, GitHub } from \"react-feather\"\nimport { avatarStatus } from \"./AvatarSourceCode\"\nimport avatarImg from \"../../../assets/img/portrait/small/avatar-s-20.jpg\"\n\nclass AvatarStatus extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Status</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              use prop\n              <code>status=[online | offline | away | busy]</code> to create\n              avatar with status.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Avatar className=\"mr-1\" icon={<GitHub />} status=\"online\" />\n                <Avatar className=\"mr-1\" content=\"LD\" status=\"offline\" />\n                <Avatar className=\"mr-1\" content=\"Luisd\" status=\"away\" />\n                <Avatar className=\"mr-1\" img={avatarImg} status=\"busy\" />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {avatarStatus}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AvatarStatus\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\nimport AvatarDefault from \"./AvatarDefault\"\nimport AvatarSizes from \"./AvatarSizes\"\nimport AvatarColors from \"./AvatarColors\"\nimport AvatarBadges from \"./AvatarBadge\"\nimport AvatarIcons from \"./AvatarIcons\"\nimport AvatarStatus from \"./AvatarStatus\"\nimport Prism from \"prismjs\"\nimport \"prismjs/components/prism-jsx.min\"\nclass Avatar extends React.Component {\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Avatar\"\n          breadCrumbParent=\"Extra Components\"\n          breadCrumbActive=\"Avatar\"\n        />\n        <Row className=\"match-height\">\n          <Col xl=\"6\" lg=\"12\">\n            <AvatarDefault />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AvatarSizes />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AvatarColors />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AvatarBadges />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AvatarIcons />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AvatarStatus />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default Avatar\n"],"sourceRoot":""}