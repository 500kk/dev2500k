{"version":3,"sources":["../node_modules/prismjs/components/prism-jsx.min.js","components/reactstrap/collapse/CollapseSourceCode.js","components/reactstrap/collapse/CollapseDefault.js","components/reactstrap/collapse/CollapseUncontrolled.js","components/reactstrap/collapse/Accordion.js","components/reactstrap/collapse/AccordionShadow.js","components/reactstrap/collapse/AccordionBorder.js","components/reactstrap/collapse/AccordionMargin.js","components/reactstrap/collapse/AccordionHover.js","components/reactstrap/collapse/Collapse.js"],"names":["i","t","util","clone","languages","javascript","jsx","extend","tag","pattern","inside","insertBefore","spread","punctuation","script","alias","rest","o","content","map","join","hooks","add","language","p","n","e","length","a","s","type","tagName","pop","push","openedBraces","g","splice","Token","tokens","Prism","accordion","className","accordionShadow","accordionBorder","accordionMargin","accordionHover","collapseUncontrolled","collapseDefault","collapseItems","id","title","CollapseDefault","state","activeTab","status","toggleTab","tab","setState","toggleCollapse","collapseID","index","indexOf","items","onEntered","includes","onEntering","onExited","onExiting","renderCollapse","collapseItem","Card","key","onClick","classnames","closing","opening","CardHeader","CardTitle","size","Collapse","isOpen","CardBody","Fragment","Nav","tabs","NavItem","NavLink","active","this","TabContent","TabPane","tabId","React","Component","CollapseUncontrolled","UncontrolledCollapse","toggler","Accordion","prevState","accordionItems","AccordionShadow","accordionShadowItems","open","AccordionBorder","accordionBorderItems","AccordionMargin","accordionMarginItems","AccordionHover","accordionHoverItems","onMouseEnter","Collaspe","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg"],"mappings":"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","file":"static/js/99.07899f8d.chunk.js","sourcesContent":["!function(i){var t=i.util.clone(i.languages.javascript);i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=/<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:$-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i,i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:/\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,inside:{punctuation:/\\.{3}|[{}.]/,\"attr-value\":/\\w+/}}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"attr-value\",{script:{pattern:/=(?:\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,inside:{\"script-punctuation\":{pattern:/^=(?={)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},p=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&p(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||p(t.tokens)})}(Prism);","import React from \"react\"\n\nexport const accordion = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Collapse} from \"reactstrap\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass Accordion extends React.Component {\n\n  state = { collapseID: \"\"}\n\n  toggleCollapse = collapseID => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n      }))\n    }\n\n\n  render() {\n\n      const accordionItems = collapseItems.map(collapseItem => {\n          return (\n            <Card\n              key={collapseItem.id}\n              onClick={() => this.toggleCollapse(collapseItem.id)}\n            >\n              <CardHeader>\n                <CardTitle className=\"lead collapse-title collapsed\">\n                  {collapseItem.title}\n                </CardTitle>\n              </CardHeader>\n              <Collapse\n                isOpen={collapseItem.id === this.state.collapseID}\n                onEntering={this.onEntering}\n                onEntered={this.onEntered}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <CardBody>{collapseItem.content}</CardBody>\n              </Collapse>\n            </Card>\n          )\n        })\n\n    return(\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate\">\n      {accordionItems}\n    </div>\n    )\n  }\n}\nexport default Accordion`}\n    </code>\n  </pre>\n)\n\nexport const accordionShadow = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Collapse} from \"reactstrap\"\nimport classnames from \"classnames\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionShadow extends React.Component {\n\n  state = { collapseID: \"\"}\n\n  toggleCollapse = collapseID => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n      }))\n    }\n\n\n  render() {\n\n      const accordionShadowItems = collapseItems.map(collapseItem => {\n          return (\n            <Card\n              className={classnames({\n                open: collapseItem.id === this.state.collapseID\n              })}\n              key={collapseItem.id}\n              onClick={() => this.toggleCollapse(collapseItem.id)}\n            >\n              <CardHeader>\n                <CardTitle className=\"lead collapse-title collapsed\">\n                  {collapseItem.title}\n                </CardTitle>\n              </CardHeader>\n              <Collapse\n                isOpen={collapseItem.id === this.state.collapseID}\n                onEntering={this.onEntering}\n                onEntered={this.onEntered}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <CardBody>{collapseItem.content}</CardBody>\n              </Collapse>\n            </Card>\n          )\n        })\n\n    return(\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate accordion-shadow\">\n      {accordionShadowItems}\n    </div>\n    )\n  }\n}\nexport default AccordionShadow`}\n    </code>\n  </pre>\n)\n\nexport const accordionBorder = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Collapse} from \"reactstrap\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionBorder extends React.Component {\n\n  state = { collapseID: \"\"}\n\n  toggleCollapse = collapseID => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n      }))\n    }\n\n\n  render() {\n\n      const accordionBorderItems = collapseItems.map(collapseItem => {\n          return (\n            <Card\n              className=\"collapse-border-item\"\n              key={collapseItem.id}\n              onClick={() => this.toggleCollapse(collapseItem.id)}\n            >\n              <CardHeader>\n                <CardTitle className=\"lead collapse-title collapsed\">\n                  {collapseItem.title}\n                </CardTitle>\n              </CardHeader>\n              <Collapse\n                isOpen={collapseItem.id === this.state.collapseID}\n                onEntering={this.onEntering}\n                onEntered={this.onEntered}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <CardBody>{collapseItem.content}</CardBody>\n              </Collapse>\n            </Card>\n          )\n        })\n\n    return(\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate collapse-border\">\n      {accordionBorderItems}\n    </div>\n    )\n  }\n}\nexport default AccordionBorder`}\n    </code>\n  </pre>\n)\n\nexport const accordionMargin = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Collapse} from \"reactstrap\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionMargin extends React.Component {\n\n  state = { collapseID: \"\"}\n\n  toggleCollapse = collapseID => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n      }))\n    }\n\n\n  render() {\n\n      const accordionMarginItems = collapseItems.map(collapseItem => {\n          return (\n            <Card\n              key={collapseItem.id}\n              onClick={() => this.toggleCollapse(collapseItem.id)}\n            >\n              <CardHeader>\n                <CardTitle className=\"lead collapse-title collapsed\">\n                  {collapseItem.title}\n                </CardTitle>\n              </CardHeader>\n              <Collapse\n                isOpen={collapseItem.id === this.state.collapseID}\n                onEntering={this.onEntering}\n                onEntered={this.onEntered}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <CardBody>{collapseItem.content}</CardBody>\n              </Collapse>\n            </Card>\n          )\n        })\n\n    return(\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\n      {accordionMarginItems}\n    </div>\n    )\n  }\n}\nexport default AccordionMargin`}\n    </code>\n  </pre>\n)\n\nexport const accordionHover = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Collapse} from \"reactstrap\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionHover extends React.Component {\n\n  state = { collapseID: \"\"}\n\n  toggleCollapse = collapseID => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n      }))\n    }\n\n\n  render() {\n\n      const accordionHoverItems = collapseItems.map(collapseItem => {\n          return (\n            <Card\n              key={collapseItem.id}\n              onClick={() => this.toggleCollapse(collapseItem.id)}\n            >\n              <CardHeader>\n                <CardTitle className=\"lead collapse-title collapsed\">\n                  {collapseItem.title}\n                </CardTitle>\n              </CardHeader>\n              <Collapse\n                isOpen={collapseItem.id === this.state.collapseID}\n                onEntering={this.onEntering}\n                onEntered={this.onEntered}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <CardBody>{collapseItem.content}</CardBody>\n              </Collapse>\n            </Card>\n          )\n        })\n\n    return(\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\n      {accordionHoverItems}\n    </div>\n    )\n  }\n}\nexport default AccordionHover\n  `}\n    </code>\n  </pre>\n)\n\nexport const collapseUncontrolled = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {UncontrolledCollaspe} from \"reactstrap\"\n\nclass CollapseUncontrolled extends React.Component {\n\n  render() {\n    return(\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\n        <Card>\n          <CardHeader id=\"item-1\">\n            <CardTitle className=\"lead collapse-title collapsed\">\n              Collapse Item 1\n            </CardTitle>\n          </CardHeader>\n          <UncontrolledCollapse toggler=\"#item-1\">\n            <CardBody>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\n            </CardBody>\n          </UncontrolledCollapse>\n        </Card>\n        <Card>\n          <CardHeader id=\"item-2\">\n            <CardTitle className=\"lead collapse-title collapsed\">\n              Collapse Item 2\n            </CardTitle>\n          </CardHeader>\n          <UncontrolledCollapse toggler=\"#item-2\">\n            <CardBody>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\n            </CardBody>\n          </UncontrolledCollapse>\n        </Card>\n        <Card>\n          <CardHeader id=\"item-3\">\n            <CardTitle className=\"lead collapse-title collapsed\">\n              Collapse Item 3\n            </CardTitle>\n          </CardHeader>\n          <UncontrolledCollapse toggler=\"#item-3\">\n            <CardBody>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\n            </CardBody>\n          </UncontrolledCollapse>\n        </Card>\n        <Card>\n          <CardHeader id=\"item-4\">\n            <CardTitle className=\"lead collapse-title collapsed\">\n              Collapse Item 4\n            </CardTitle>\n          </CardHeader>\n          <UncontrolledCollapse toggler=\"#item-4\">\n            <CardBody>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\n            </CardBody>\n          </UncontrolledCollapse>\n        </Card>\n    </div>\n    )\n  }\n}\nexport default CollapseUncontrolled\n  `}\n    </code>\n  </pre>\n)\n\nexport const collapseDefault = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Collaspe} from \"reactstrap\"\n\nconst collapseItems = [\n  {\n    id: 0,\n    title: \"Collapse Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 1,\n    title: \"Collapse Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 2,\n    title: \"Collapse Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 3,\n    title: \"Collapse Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass CollapseDefault extends React.Component {\n\n  state = {\n    collapseItems: []\n  }\n\n  toggleCollapse = collapseID => {\n    let index = this.state.collapseItems.indexOf(collapseID)\n    if (index >= 0) {\n      let items = this.state.collapseItems\n      items.splice(index, index + 1)\n      this.setState({ collapseItems: items })\n    } else {\n      let items = this.state.collapseItems\n      items.push(collapseID)\n      this.setState({ collapseItems: items })\n    }\n  }\n\n  render() {\n\n    const renderCollapse = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          key={collapseItem.id}\n          onClick={() => this.toggleCollapse(collapseItem.id)}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n          </CardHeader>\n          <Collapse\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\n            onEntering={this.onEntering}\n            onEntered={this.onEntered}\n            onExiting={this.onExiting}\n            onExited={this.onExited}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return(\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\n        {renderCollapse}\n      </div>\n    )\n  }\n}\nexport default CollapseDefault\n  `}\n    </code>\n  </pre>\n)\n","import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { collapseDefault } from \"./CollapseSourceCode\"\nconst collapseItems = [\n  {\n    id: 0,\n    title: \"Collapse Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 1,\n    title: \"Collapse Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 2,\n    title: \"Collapse Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 3,\n    title: \"Collapse Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass CollapseDefault extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseItems: [],\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    let index = this.state.collapseItems.indexOf(collapseID)\n    if (index >= 0) {\n      let items = this.state.collapseItems\n      items.splice(index, index + 1)\n      this.setState({ collapseItems: items })\n    } else {\n      let items = this.state.collapseItems\n      items.push(collapseID)\n      this.setState({ collapseItems: items })\n    }\n  }\n\n  onEntered = id => {\n    if (this.state.collapseItems.includes(id))\n      this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (this.state.collapseItems.includes(id))\n      this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (this.state.collapseItems.includes(id))\n      this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (this.state.collapseItems.includes(id))\n      this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const renderCollapse = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          key={collapseItem.id}\n          onClick={() => this.toggleCollapse(collapseItem.id)}\n          className={classnames({\n            \"collapse-collapsed\":\n              this.state.status === \"Closed\" &&\n              this.state.collapseItems.includes(collapseItem.id),\n            \"collapse-shown\":\n              this.state.status === \"Opened\" &&\n              this.state.collapseItems.includes(collapseItem.id),\n            closing:\n              this.state.status === \"Closing...\" &&\n              this.state.collapseItems.includes(collapseItem.id),\n            opening:\n              this.state.status === \"Opening...\" &&\n              this.state.collapseItems.includes(collapseItem.id)\n          })}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n            <ChevronDown size={15} className=\"collapse-icon\" />\n          </CardHeader>\n          <Collapse\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\n            onEntering={() => this.onEntering(collapseItem.id)}\n            onEntered={() => this.onEntered(collapseItem.id)}\n            onExiting={() => this.onExiting(collapseItem.id)}\n            onExited={() => this.onExited(collapseItem.id)}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              With basic collapse you can open multiple items at a time. to add\n              bottom border use <code> .collapse-bordered</code> as a wrapper of\n              collapse cards.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse collapse-bordered\">\n                  {renderCollapse}\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {collapseDefault}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default CollapseDefault\n","import React from \"react\"\nimport {\n  UncontrolledCollapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { collapseUncontrolled } from \"./CollapseSourceCode\"\n\nclass CollapseUncontrolled extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Collapse Uncontrolled</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              With uncontrolled collapse you don't have to manage state you can\n              toggle collapse with <code>id</code> and <code>toggler</code>\n              attribute\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse collapse-bordered\">\n                  <Card>\n                    <CardHeader id=\"item-1\">\n                      <CardTitle className=\"lead collapse-title collapsed\">\n                        Collapse Item 1\n                      </CardTitle>\n                      <ChevronDown size={15} className=\"collapse-icon\" />\n                    </CardHeader>\n                    <UncontrolledCollapse toggler=\"#item-1\">\n                      <CardBody>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\n                      </CardBody>\n                    </UncontrolledCollapse>\n                  </Card>\n                  <Card>\n                    <CardHeader id=\"item-2\">\n                      <CardTitle className=\"lead collapse-title collapsed\">\n                        Collapse Item 2\n                      </CardTitle>\n                      <ChevronDown size={15} className=\"collapse-icon\" />\n                    </CardHeader>\n                    <UncontrolledCollapse toggler=\"#item-2\">\n                      <CardBody>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\n                      </CardBody>\n                    </UncontrolledCollapse>\n                  </Card>\n                  <Card>\n                    <CardHeader id=\"item-3\">\n                      <CardTitle className=\"lead collapse-title collapsed\">\n                        Collapse Item 3\n                      </CardTitle>\n                      <ChevronDown size={15} className=\"collapse-icon\" />\n                    </CardHeader>\n                    <UncontrolledCollapse toggler=\"#item-3\">\n                      <CardBody>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\n                      </CardBody>\n                    </UncontrolledCollapse>\n                  </Card>\n                  <Card>\n                    <CardHeader id=\"item-4\">\n                      <CardTitle className=\"lead collapse-title collapsed\">\n                        Collapse Item 4\n                      </CardTitle>\n                      <ChevronDown size={15} className=\"collapse-icon\" />\n                    </CardHeader>\n                    <UncontrolledCollapse toggler=\"#item-4\">\n                      <CardBody>\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\n                      </CardBody>\n                    </UncontrolledCollapse>\n                  </Card>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {collapseUncontrolled}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default CollapseUncontrolled\n","import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { accordion } from \"./CollapseSourceCode\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass Accordion extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseID: \"\",\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }))\n  }\n  onEntered = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const accordionItems = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          key={collapseItem.id}\n          onClick={() => this.toggleCollapse(collapseItem.id)}\n          className={classnames({\n            \"collapse-collapsed\":\n              this.state.status === \"Closed\" &&\n              this.state.collapseID === collapseItem.id,\n            \"collapse-shown\":\n              this.state.status === \"Opened\" &&\n              this.state.collapseID === collapseItem.id,\n            closing:\n              this.state.status === \"Closing...\" &&\n              this.state.collapseID === collapseItem.id,\n            opening:\n              this.state.status === \"Opening...\" &&\n              this.state.collapseID === collapseItem.id\n          })}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n            <ChevronDown size={15} className=\"collapse-icon\" />\n          </CardHeader>\n          <Collapse\n            isOpen={collapseItem.id === this.state.collapseID}\n            onEntering={() => this.onEntering(collapseItem.id)}\n            onEntered={() => this.onEntered(collapseItem.id)}\n            onExiting={() => this.onExiting(collapseItem.id)}\n            onExited={() => this.onExited(collapseItem.id)}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              You may want to open one item at a time for that you can use\n              accordion.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse collapse-bordered\">\n                  {accordionItems}\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {accordion}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default Accordion\n","import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { accordionShadow } from \"./CollapseSourceCode\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionShadow extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseID: \"\",\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }))\n  }\n\n  onEntered = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const accordionShadowItems = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          key={collapseItem.id}\n          onClick={() => this.toggleCollapse(collapseItem.id)}\n          className={classnames({\n            \"collapse-collapsed\":\n              this.state.status === \"Closed\" &&\n              this.state.collapseID === collapseItem.id,\n            \"collapse-shown\":\n              this.state.status === \"Opened\" &&\n              this.state.collapseID === collapseItem.id,\n            closing:\n              this.state.status === \"Closing...\" &&\n              this.state.collapseID === collapseItem.id,\n            opening:\n              this.state.status === \"Opening...\" &&\n              this.state.collapseID === collapseItem.id,\n            open: collapseItem.id === this.state.collapseID\n          })}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n            <ChevronDown size={15} className=\"collapse-icon\" />\n          </CardHeader>\n          <Collapse\n            isOpen={collapseItem.id === this.state.collapseID}\n            onEntering={() => this.onEntering(collapseItem.id)}\n            onEntered={() => this.onEntered(collapseItem.id)}\n            onExiting={() => this.onExiting(collapseItem.id)}\n            onExited={() => this.onExited(collapseItem.id)}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion Shadow</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              use class <code>.accordion-shadow</code> as a wrapper of your\n              accordion/collapse card for shadow.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse collapse-bordered accordion-shadow\">\n                  {accordionShadowItems}\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {accordionShadow}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AccordionShadow\n","import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { accordionBorder } from \"./CollapseSourceCode\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionBorder extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseID: \"\",\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }))\n  }\n\n  onEntered = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const accordionBorderItems = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          key={collapseItem.id}\n          onClick={() => this.toggleCollapse(collapseItem.id)}\n          className={classnames(\"collapse-border-item\", {\n            \"collapse-collapsed\":\n              this.state.status === \"Closed\" &&\n              this.state.collapseID === collapseItem.id,\n            \"collapse-shown\":\n              this.state.status === \"Opened\" &&\n              this.state.collapseID === collapseItem.id,\n            closing:\n              this.state.status === \"Closing...\" &&\n              this.state.collapseID === collapseItem.id,\n            opening:\n              this.state.status === \"Opening...\" &&\n              this.state.collapseID === collapseItem.id\n          })}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n            <ChevronDown size={15} className=\"collapse-icon\" />\n          </CardHeader>\n          <Collapse\n            isOpen={collapseItem.id === this.state.collapseID}\n            onEntering={() => this.onEntering(collapseItem.id)}\n            onEntered={() => this.onEntered(collapseItem.id)}\n            onExiting={() => this.onExiting(collapseItem.id)}\n            onExited={() => this.onExited(collapseItem.id)}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion Border</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use class <code>.collapse-border-item</code> with your collapsible\n              card.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse\">{accordionBorderItems}</div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {accordionBorder}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AccordionBorder\n","import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { accordionMargin } from \"./CollapseSourceCode\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionMargin extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseID: \"\",\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }))\n  }\n\n  onEntered = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const accordionMarginItems = collapseItems.map(collapseItem => {\n      return (\n        <div className=\"collapse-margin\" key={collapseItem.id}>\n          <Card\n            onClick={() => this.toggleCollapse(collapseItem.id)}\n            className={classnames({\n              \"collapse-collapsed\":\n                this.state.status === \"Closed\" &&\n                this.state.collapseID === collapseItem.id,\n              \"collapse-shown\":\n                this.state.status === \"Opened\" &&\n                this.state.collapseID === collapseItem.id,\n              closing:\n                this.state.status === \"Closing...\" &&\n                this.state.collapseID === collapseItem.id,\n              opening:\n                this.state.status === \"Opening...\" &&\n                this.state.collapseID === collapseItem.id\n            })}\n          >\n            <CardHeader>\n              <CardTitle className=\"lead collapse-title collapsed\">\n                {collapseItem.title}\n              </CardTitle>\n              <ChevronDown size={15} className=\"collapse-icon\" />\n            </CardHeader>\n            <Collapse\n              isOpen={collapseItem.id === this.state.collapseID}\n              onEntering={() => this.onEntering(collapseItem.id)}\n              onEntered={() => this.onEntered(collapseItem.id)}\n              onExiting={() => this.onExiting(collapseItem.id)}\n              onExited={() => this.onExited(collapseItem.id)}\n            >\n              <CardBody>{collapseItem.content}</CardBody>\n            </Collapse>\n          </Card>\n        </div>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion Margin</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use class <code>.collapse-Margin</code> as a wrapper of your\n              collapseible card.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse\">{accordionMarginItems}</div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {accordionMargin}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AccordionMargin\n","import React from \"react\"\nimport {\n  Collapse,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, ChevronDown } from \"react-feather\"\nimport { accordionHover } from \"./CollapseSourceCode\"\n\nconst collapseItems = [\n  {\n    id: 1,\n    title: \"Accordion Item 1\",\n    content:\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\n  },\n  {\n    id: 2,\n    title: \"Accordion Item 2\",\n    content:\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\n  },\n  {\n    id: 3,\n    title: \"Accordion Item 3\",\n    content:\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\n  },\n  {\n    id: 4,\n    title: \"Accordion Item 4\",\n    content:\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\n  }\n]\n\nclass AccordionHover extends React.Component {\n  state = {\n    activeTab: \"1\",\n    collapseID: \"\",\n    status: \"Closed\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  toggleCollapse = collapseID => {\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }))\n  }\n\n  onEntered = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\n  }\n  onEntering = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\n  }\n\n  onExited = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\n  }\n\n  onExiting = id => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\n  }\n\n  render() {\n    const accordionHoverItems = collapseItems.map(collapseItem => {\n      return (\n        <Card\n          onMouseEnter={() => this.toggleCollapse(collapseItem.id)}\n          key={collapseItem.id}\n          className={classnames({\n            \"collapse-collapsed\":\n              this.state.status === \"Closed\" &&\n              this.state.collapseID === collapseItem.id,\n            \"collapse-shown\":\n              this.state.status === \"Opened\" &&\n              this.state.collapseID === collapseItem.id,\n            closing:\n              this.state.status === \"Closing...\" &&\n              this.state.collapseID === collapseItem.id,\n            opening:\n              this.state.status === \"Opening...\" &&\n              this.state.collapseID === collapseItem.id\n          })}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n            <ChevronDown size={15} className=\"collapse-icon\" />\n          </CardHeader>\n          <Collapse\n            isOpen={collapseItem.id === this.state.collapseID}\n            onEntering={() => this.onEntering(collapseItem.id)}\n            onEntered={() => this.onEntered(collapseItem.id)}\n            onExiting={() => this.onExiting(collapseItem.id)}\n            onExited={() => this.onExited(collapseItem.id)}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      )\n    })\n\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Accordion Hover</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              To create a hover accordion call <code>.toggleCollapse</code> on{\" \"}\n              <code>mouseEnter</code> instead of <code>onClick</code>\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"vx-collapse collapse-bordered\">\n                  {accordionHoverItems}\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {accordionHover}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AccordionHover\n","import React from \"react\"\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\nimport CollapseDefault from \"./CollapseDefault\"\nimport CollapseUncontrolled from \"./CollapseUncontrolled\"\nimport Accordion from \"./Accordion\"\nimport AccordionShadow from \"./AccordionShadow\"\nimport AccordionBorder from \"./AccordionBorder\"\nimport AccordionMargin from \"./AccordionMargin\"\nimport AccordionHover from \"./AccordionHover\"\nimport { Row, Col } from \"reactstrap\"\nimport Prism from \"prismjs\"\nimport \"prismjs/components/prism-jsx.min\"\nclass Collaspe extends React.Component {\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Collapse\"\n          breadCrumbParent=\"Components\"\n          breadCrumbActive=\"Collapse\"\n        />\n        <Row>\n          <Col xl=\"6\" lg=\"12\">\n            <CollapseDefault />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <CollapseUncontrolled />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <Accordion />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AccordionShadow />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AccordionBorder />\n          </Col>\n          <Col xl=\"6\" lg=\"12\">\n            <AccordionMargin />\n          </Col>\n        </Row>\n        <AccordionHover />\n      </React.Fragment>\n    )\n  }\n}\nexport default Collaspe\n"],"sourceRoot":""}