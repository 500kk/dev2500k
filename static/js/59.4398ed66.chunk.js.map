{"version":3,"sources":["extensions/extensionsHeader.js","../../src/FileSaver.js","extensions/import-export/Export.js"],"names":["ExtensionsHeader","className","sm","data-tour","this","props","title","link","href","target","rel","subTitle","React","Component","console","status","MouseEvent","document","window","self","global","HTMLAnchorElement","b","name","location","setTimeout","f","navigator","autoBom","test","Blob","type","open","i","saveAs","module","Export","state","data","id","username","email","website","filteredData","value","modal","fileName","fileFormat","toggleModal","setState","handleFilter","e","length","filter","col","startsWithCondition","toLowerCase","startsWith","toString","includesCondition","includes","handleExport","table","ReactDOM","findDOMNode","tableRef","bookType","wb","XLSX","utils","table_to_book","sheet","wbout","write","bookSST","file","FileSaver","s","buf","ArrayBuffer","view","Uint8Array","charCodeAt","s2ab","renderTableData","map","key","Fragment","Ripple","color","onClick","onChange","size","innerRef","el","responsive","isOpen","toggle","placeholder"],"mappings":"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","file":"static/js/59.4398ed66.chunk.js","sourcesContent":["import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\n// import { Star } from \"react-feather\"\n\nclass ExtensionsHeader extends React.Component {\n  render() {\n    return (\n      <Row className=\"mb-2\">\n        <Col sm=\"12\" className=\"ml-50\">\n          <p\n            className=\"font-medium-5 mt-1 extension-title\"\n            data-tour=\"extension-title\"\n          >\n            {this.props.title}\n          </p>\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.props.subTitle}\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \n          }\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default ExtensionsHeader\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile)\n  : 'download' in HTMLAnchorElement.prototype\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari)) && typeof FileReader === 'object') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ExtensionsHeader from \"../extensionsHeader\"\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  FormGroup,\n  CustomInput\n} from \"reactstrap\"\nimport { Search } from \"react-feather\"\nimport XLSX from \"xlsx\"\nimport * as FileSaver from \"file-saver\"\n\nclass Export extends React.Component {\n  state = {\n    data: [\n      {\n        id: 1,\n        name: \"Leanne Graham\",\n        username: \"Bret\",\n        email: \"Sincere@april.biz\",\n        website: \"hildegard.org\"\n      },\n      {\n        id: 2,\n        name: \"Ervin Howell\",\n        username: \"Antonette\",\n        email: \"Shanna@melissa.tv\",\n        website: \"anastasia.net\"\n      },\n      {\n        id: 3,\n        name: \"Clementine Bauch\",\n        username: \"Samantha\",\n        email: \"Nathan@yesenia.net\",\n        website: \"ramiro.info\"\n      },\n      {\n        id: 4,\n        name: \"Patricia Lebsack\",\n        username: \"Karianne\",\n        email: \"Julianne.OConner@kory.org\",\n        website: \"kale.biz\"\n      },\n      {\n        id: 5,\n        name: \"Chelsey Dietrich\",\n        username: \"Kamren\",\n        email: \"Lucio_Hettinger@annie.ca\",\n        website: \"demarco.info\"\n      },\n      {\n        id: 6,\n        name: \"Mrs. Dennis Schulist\",\n        username: \"Leopoldo_Corkery\",\n        email: \"Karley_Dach@jasper.info\",\n        website: \"ola.org\"\n      },\n      {\n        id: 7,\n        name: \"Kurtis Weissnat\",\n        username: \"Elwyn.Skiles\",\n        email: \"Telly.Hoeger@billy.biz\",\n        website: \"elvis.io\"\n      },\n      {\n        id: 8,\n        name: \"Nicholas Runolfsdottir V\",\n        username: \"Maxime_Nienow\",\n        email: \"Sherwood@rosamond.me\",\n        website: \"jacynthe.com\"\n      },\n      {\n        id: 9,\n        name: \"Glenna Reichert\",\n        username: \"Delphine\",\n        email: \"Chaim_McDermott@dana.io\",\n        website: \"conrad.com\"\n      },\n      {\n        id: 10,\n        name: \"Clementina DuBuque\",\n        username: \"Moriah.Stanton\",\n        email: \"Rey.Padberg@karina.biz\",\n        website: \"ambrose.net\"\n      }\n    ],\n    filteredData: [],\n    value: \"\",\n    modal: false,\n    fileName: \"\",\n    fileFormat: \"xlsx\"\n  }\n\n  toggleModal = () => {\n    this.setState({ modal: !this.state.modal })\n  }\n\n  handleFilter = e => {\n    let data = this.state.data\n    let filteredData = []\n    let value = e.target.value\n    this.setState({ value })\n    if (value.length) {\n      filteredData = data.filter(col => {\n        let startsWithCondition =\n          col.name.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.website.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.id\n            .toString()\n            .toLowerCase()\n            .startsWith(value.toLowerCase())\n\n        let includesCondition =\n          col.name.toLowerCase().includes(value.toLowerCase()) ||\n          col.email.toLowerCase().includes(value.toLowerCase()) ||\n          col.website.toLowerCase().includes(value.toLowerCase()) ||\n          col.id\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n\n        if (startsWithCondition) return startsWithCondition\n        else if (!startsWithCondition && includesCondition)\n          return includesCondition\n        else return null\n      })\n      this.setState({ value, filteredData })\n    }\n  }\n\n  handleExport = () => {\n    this.toggleModal()\n    let table = ReactDOM.findDOMNode(this.tableRef)\n    let bookType = this.state.fileFormat.length ? this.state.fileFormat : \"xlsx\"\n    let wb = XLSX.utils.table_to_book(table, { sheet: \"Sheet JS\" })\n    let wbout = XLSX.write(wb, { bookType, bookSST: true, type: \"binary\" })\n\n    const s2ab = s => {\n      var buf = new ArrayBuffer(s.length)\n      var view = new Uint8Array(buf)\n      for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xff\n      return buf\n    }\n    let file =\n      this.state.fileFormat.length && this.state.fileFormat.length\n        ? `${this.state.fileName}.${this.state.fileFormat}`\n        : this.state.fileName.length\n        ? `${this.state.fileName}.xlsx`\n        : this.state.fileFormat.length\n        ? `excel-sheet.${this.state.fileFormat}`\n        : \"excel-sheet.xlsx\"\n\n    return FileSaver.saveAs(\n      new Blob([s2ab(wbout)], { type: \"application/octet-stream\" }),\n      file\n    )\n  }\n\n  render() {\n    let array = this.state.value ? this.state.filteredData : this.state.data\n    let renderTableData = array.map(col => {\n      return (\n        <tr key={col.id}>\n          <td>{col.email}</td>\n          <td>{col.name}</td>\n          <td>{col.website}</td>\n          <td>{col.id}</td>\n        </tr>\n      )\n    })\n    return (\n      <React.Fragment>\n        <ExtensionsHeader\n          title=\"XLSX\"\n          subTitle=\"Xlsx is a parser and writer for various spreadsheet formats\"\n          link=\"https://github.com/AdeleD/react-paginate\"\n        />\n        <Row className=\"export-component\">\n          <Col sm=\"12\">\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col sm=\"12\">\n                    <div className=\"d-flex justify-content-between flex-wrap\">\n                      <Button.Ripple color=\"primary\" onClick={this.toggleModal}>\n                        Export\n                      </Button.Ripple>\n                      <div className=\"filter position-relative has-icon-left\">\n                        <Input\n                          type=\"text\"\n                          value={this.state.value}\n                          onChange={e => this.handleFilter(e)}\n                        />\n                        <div className=\"form-control-position\">\n                          <Search size={15} />\n                        </div>\n                      </div>\n                    </div>\n                  </Col>\n                  <Col sm=\"12\">\n                    <Table\n                      innerRef={el => (this.tableRef = el)}\n                      className=\"table-hover-animation mt-2\"\n                      responsive>\n                      <thead>\n                        <tr>\n                          <th>Email</th>\n                          <th>Name</th>\n                          <th>Website</th>\n                          <th>Rank</th>\n                        </tr>\n                      </thead>\n                      <tbody>{renderTableData}</tbody>\n                    </Table>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggleModal}\n          className=\"modal-dialog-centered\">\n          <ModalHeader toggle={this.toggleModal}>Export To Excel</ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                value={this.state.fileName}\n                onChange={e => this.setState({ fileName: e.target.value })}\n                placeholder=\"Enter File Name\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <CustomInput\n                type=\"select\"\n                id=\"selectFileFormat\"\n                name=\"customSelect\"\n                value={this.state.fileFormat}\n                onChange={e => this.setState({ fileFormat: e.target.value })}>\n                <option>xlsx</option>\n                <option>csv</option>\n                <option>txt</option>\n              </CustomInput>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.handleExport}>\n              Export\n            </Button>\n            <Button color=\"flat-danger\" onClick={this.toggleModal}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Export\n"],"sourceRoot":""}