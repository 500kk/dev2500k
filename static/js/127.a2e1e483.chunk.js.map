{"version":3,"sources":["views/forms/form-elements/input-groups/InputGroupSourceCode.js","views/forms/form-elements/input-groups/InputGroupBasic.js","views/forms/form-elements/input-groups/InputGroupCbAndRadio.js","views/forms/form-elements/input-groups/InputGroupButtons.js","views/forms/form-elements/input-groups/InputGroupDropdown.js","views/forms/form-elements/input-groups/InputGroupSizes.js","views/forms/form-elements/input-groups/InputGoups.js"],"names":["inputGroupBasic","className","inputGroupCBRadio","inputGroupButtons","inputGroupDropdowns","inputGroupSizes","InputGroupBasic","state","activeTab","toggleTab","tab","setState","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","this","onClick","size","CardBody","TabContent","TabPane","tabId","Row","Col","lg","md","FormGroup","InputGroup","InputGroupAddon","addonType","Input","placeholder","InputGroupText","min","max","type","step","React","Component","InputGroupCbAndRadio","color","icon","defaultChecked","name","rxSize","InputGroupButtons","Button","Ripple","InputGroupDropdowns","dropdownOpen","dropdownIcon","dropdownRight","toggleDropDown","toggleDropdownIcon","toggleDropDownRight","InputGroupButtonDropdown","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","disabled","divider","caret","InputGroupSizes","sm","InputGroups","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","InputGroupDropdown"],"mappings":"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","file":"static/js/127.a2e1e483.chunk.js","sourcesContent":["import React from \"react\"\n// eslint-disable-next-line\nimport prism from \"prismjs\"\n\nexport const inputGroupBasic = (\n  <pre>\n    <code className=\"language-javascript\">\n      {`\nimport React from \"react\"\nimport {\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Row,\n  Col\n} from \"reactstrap\"\n\n  class InputGroupBasic extends React.Component {\n    render() {\n      return (\n        <Row>\n          <Col lg=\"4\" md=\"12\">\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\n              <Input placeholder=\"Input Group to left\" />\n            </InputGroup>\n          </Col>\n          <Col lg=\"4\" md=\"12\">\n            <InputGroup>\n              <Input placeholder=\"Input Group to right\" />\n              <InputGroupAddon addonType=\"append\">\n                <InputGroupText>@example.com</InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </Col>\n          <Col lg=\"4\" md=\"12\">\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\n              <Input\n                placeholder=\"On both sides\"\n                min={0}\n                max={100}\n                type=\"number\"\n                step=\"1\"\n              />\n              <InputGroupAddon addonType=\"append\">.00</InputGroupAddon>\n            </InputGroup>\n          </Col>\n        </Row>\n      )\n    }\n  }\n  export default InputGroupBasic\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupCBRadio = (\n  <pre>\n    <code className=\"language-javascript\">\n      {`\nimport React from \"react\"\nimport {\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Row,\n  Col\n} from \"reactstrap\"\nimport { Check } from \"react-feather\"\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport Radio from \"../../../../components/@vuexy/radio/RadioVuexy\"\n\n  class InputGroupCBRadio extends React.Component {\n    render() {\n      return (\n        <Row>\n          <Col lg=\"6\" md=\"12\">\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>\n                  <Checkbox\n                    color=\"primary\"\n                    icon={<Check className=\"vx-icon\" size={12} />}\n                    defaultChecked={false}\n                    size=\"vx-checkbox-sm\"\n                  />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input type=\"text\" />\n            </InputGroup>\n          </Col>\n          <Col lg=\"6\" md=\"12\">\n            <InputGroup>\n              <Input type=\"text\" />\n              <InputGroupAddon addonType=\"append\">\n                <InputGroupText>\n                  <Radio\n                    defaultChecked={false}\n                    name=\"exampleRadio\"\n                    rxSize=\"vx-radio-sm\"\n                  />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </Col>\n        </Row>\n      )\n    }\n  }\n  export default InputGroupCBRadio\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupButtons = (\n  <pre>\n    <code className=\"language-javascript\">\n      {`\nimport React from \"react\"\nimport {\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Row,\n  Col,\n  Button\n} from \"reactstrap\"\n\n  class InputGroupButtons extends React.Component {\n    render() {\n      return (\n        <Row>\n          <Col lg=\"6\" md=\"12\">\n            <InputGroup>\n              <Input />\n              <InputGroupAddon addonType=\"append\">\n                <Button color=\"primary\">Go</Button>\n              </InputGroupAddon>\n            </InputGroup>\n          </Col>\n          <Col lg=\"6\" md=\"12\">\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">\n                <Button color=\"primary\">\n                  <Search size={15} />\n                </Button>\n              </InputGroupAddon>\n              <Input type=\"text\" />\n              <InputGroupAddon addonType=\"append\">\n                <Button color=\"primary\">Search !</Button>\n              </InputGroupAddon>\n            </InputGroup>\n          </Col>\n        </Row>\n      )\n    }\n  }\n  export default InputGroupButtons\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupDropdowns = (\n  <pre>\n    <code className=\"language-javascript\">\n      {`\nimport React from \"react\"\nimport {\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Row,\n  Col,\n  Button,\n  InputGroupButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\"\n\n  class InputGroupDropdowns extends React.Component {\n    render() {\n      return (\n        <Row>\n          <Col lg=\"6\" md=\"12\">\n            <InputGroup>\n              <InputGroupButtonDropdown\n                addonType=\"prepend\"\n                isOpen={this.state.dropdownOpen}\n                toggle={this.toggleDropDown}\n              >\n                <DropdownToggle color=\"primary\" caret>\n                  Action\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>Action 1</DropdownItem>\n                  <DropdownItem disabled>Action</DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>Another Action</DropdownItem>\n                </DropdownMenu>\n              </InputGroupButtonDropdown>\n              <Input />\n            </InputGroup>\n          </Col>\n          <Col lg=\"6\" md=\"12\">\n            <InputGroup>\n              <InputGroupButtonDropdown\n                addonType=\"prepend\"\n                isOpen={this.state.dropdownIcon}\n                toggle={this.toggleDropdownIcon}\n              >\n                <DropdownToggle color=\"primary\" caret>\n                  <Edit size={15} />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>Action 1</DropdownItem>\n                  <DropdownItem disabled>Action</DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>Another Action</DropdownItem>\n                </DropdownMenu>\n              </InputGroupButtonDropdown>\n              <Input />\n              <InputGroupButtonDropdown\n                addonType=\"append\"\n                isOpen={this.state.dropdownRight}\n                toggle={this.toggleDropDownRight}\n              >\n                <DropdownToggle color=\"primary\" caret>\n                  Action\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>Action 1</DropdownItem>\n                  <DropdownItem disabled>Action</DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>Another Action</DropdownItem>\n                </DropdownMenu>\n              </InputGroupButtonDropdown>\n            </InputGroup>\n          </Col>\n        </Row>\n      )\n    }\n  }\n  export default InputGroupDropdowns\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupSizes = (\n  <pre>\n    <code className=\"language-javascript\">\n      {`\nimport React from \"react\"\nimport {\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Row,\n  Col,\n} from \"reactstrap\"\n\n  class InputGroupSizes extends React.Component {\n    render() {\n      return (\n        <Row>\n          <Col sm=\"12\" className=\"mb-2\">\n            <InputGroup size=\"lg\">\n              <InputGroupAddon addonType=\"prepend\">@lg</InputGroupAddon>\n              <Input />\n            </InputGroup>\n          </Col>\n          <Col sm=\"12\" className=\"mb-2\">\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">\n                @default\n              </InputGroupAddon>\n              <Input />\n            </InputGroup>\n          </Col>\n          <Col sm=\"12\" className=\"mb-2\">\n            <InputGroup size=\"sm\">\n              <InputGroupAddon addonType=\"prepend\">@sm</InputGroupAddon>\n              <Input />\n            </InputGroup>\n          </Col>\n        </Row>\n      )\n    }\n  }\n  export default InputGroupSizes\n  `}\n    </code>\n  </pre>\n)\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Row,\n  Col,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { inputGroupBasic } from \"./InputGroupSourceCode\"\nclass InputGroupBasic extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader className=\"mb-2\">\n          <CardTitle>Basic Input Groups</CardTitle>\n          <div className=\"views\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({\n                    active: this.state.activeTab === \"1\"\n                  })}\n                  onClick={() => {\n                    this.toggleTab(\"1\")\n                  }}\n                >\n                  <Eye size={15} />\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({\n                    active: this.state.activeTab === \"2\"\n                  })}\n                  onClick={() => {\n                    this.toggleTab(\"2\")\n                  }}\n                >\n                  <Code size={15} />\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <TabContent activeTab={this.state.activeTab}>\n            <TabPane tabId=\"1\">\n              <Row>\n                <Col lg=\"4\" md=\"12\">\n                  <FormGroup>\n                    <InputGroup>\n                      <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\n                      <Input placeholder=\"Input Group to left\" />\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n                <Col lg=\"4\" md=\"12\">\n                  <FormGroup>\n                    <InputGroup>\n                      <Input placeholder=\"Input Group to right\" />\n                      <InputGroupAddon addonType=\"append\">\n                        <InputGroupText>@example.com</InputGroupText>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n                <Col lg=\"4\" md=\"12\">\n                  <FormGroup>\n                    <InputGroup>\n                      <InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\n                      <Input\n                        placeholder=\"On both sides\"\n                        min={0}\n                        max={100}\n                        type=\"number\"\n                        step=\"1\"\n                      />\n                      <InputGroupAddon addonType=\"append\">.00</InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </TabPane>\n             <TabPane className=\"component-code\" tabId=\"2\">{inputGroupBasic}</TabPane>\n          </TabContent>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default InputGroupBasic\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Row,\n  Col,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  FormGroup\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, Check } from \"react-feather\"\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport Radio from \"../../../../components/@vuexy/radio/RadioVuexy\"\nimport { inputGroupCBRadio } from \"./InputGroupSourceCode\"\n\nclass InputGroupCbAndRadio extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <Card>\n        <CardHeader className=\"mb-2\">\n          <CardTitle>Input Group Checkbox And Radio</CardTitle>\n          <div className=\"views\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({\n                    active: this.state.activeTab === \"1\"\n                  })}\n                  onClick={() => {\n                    this.toggleTab(\"1\")\n                  }}\n                >\n                  <Eye size={15} />\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({\n                    active: this.state.activeTab === \"2\"\n                  })}\n                  onClick={() => {\n                    this.toggleTab(\"2\")\n                  }}\n                >\n                  <Code size={15} />\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <TabContent activeTab={this.state.activeTab}>\n            <TabPane tabId=\"1\">\n              <Row>\n                <Col lg=\"6\" md=\"12\">\n                  <FormGroup>\n                    <InputGroup>\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <Checkbox\n                            color=\"primary\"\n                            icon={<Check className=\"vx-icon\" size={12} />}\n                            defaultChecked={false}\n                            size=\"sm\"\n                          />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input type=\"text\" />\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n                <Col lg=\"6\" md=\"12\">\n                  <FormGroup>\n                    <InputGroup>\n                      <Input type=\"text\" />\n                      <InputGroupAddon addonType=\"append\">\n                        <InputGroupText>\n                          <Radio\n                            defaultChecked={false}\n                            name=\"exampleRadio\"\n                            rxSize=\"vx-radio-sm\"\n                          />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane className=\"component-code\" tabId=\"2\">\n              {inputGroupCBRadio}\n            </TabPane>\n          </TabContent>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default InputGroupCbAndRadio\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Row,\n  Col,\n  Button,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  FormGroup\n} from \"reactstrap\"\nimport { Search, Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\nimport { inputGroupButtons } from \"./InputGroupSourceCode\"\n\nclass InputGroupButtons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <Card>\n        <CardHeader className=\"mb-2\">\n          <CardTitle>Input Group Buttons</CardTitle>\n          <div className=\"views\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({\n                    active: this.state.activeTab === \"1\"\n                  })}\n                  onClick={() => {\n                    this.toggleTab(\"1\")\n                  }}\n                >\n                  <Eye size={15} />\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({\n                    active: this.state.activeTab === \"2\"\n                  })}\n                  onClick={() => {\n                    this.toggleTab(\"2\")\n                  }}\n                >\n                  <Code size={15} />\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <TabContent activeTab={this.state.activeTab}>\n            <TabPane tabId=\"1\">\n              <Row>\n                <Col lg=\"6\" md=\"12\">\n                  <FormGroup>\n                    <InputGroup>\n                      <Input />\n                      <InputGroupAddon addonType=\"append\">\n                        <Button.Ripple color=\"primary\">Go</Button.Ripple>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n                <Col lg=\"6\" md=\"12\">\n                  <FormGroup>\n                    <InputGroup>\n                      <InputGroupAddon addonType=\"prepend\">\n                        <Button.Ripple color=\"primary\">\n                          <Search size={15} />\n                        </Button.Ripple>\n                      </InputGroupAddon>\n                      <Input type=\"text\" />\n                      <InputGroupAddon addonType=\"append\">\n                        <Button.Ripple color=\"primary\">Search !</Button.Ripple>\n                      </InputGroupAddon>\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane className=\"component-code\" tabId=\"2\">\n              {inputGroupButtons}\n            </TabPane>\n          </TabContent>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default InputGroupButtons\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  InputGroup,\n  Input,\n  Row,\n  Col,\n  InputGroupButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  FormGroup\n} from \"reactstrap\"\nimport { Eye, Code, Edit } from \"react-feather\"\nimport classnames from \"classnames\"\nimport { inputGroupDropdowns } from \"./InputGroupSourceCode\"\n\nclass InputGroupDropdowns extends React.Component {\n  state = {\n    dropdownOpen: false,\n    dropdownIcon: false,\n    dropdownRight: false,\n    activeTab: \"1\"\n  }\n  toggleDropDown = () => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    })\n  }\n  toggleDropdownIcon = () => {\n    this.setState({\n      dropdownIcon: !this.state.dropdownIcon\n    })\n  }\n  toggleDropDownRight = () => {\n    this.setState({\n      dropdownRight: !this.state.dropdownRight\n    })\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <Card>\n        <CardHeader className=\"mb-2\">\n          <CardTitle>Input Group Dropdown</CardTitle>\n          <div className=\"views\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({\n                    active: this.state.activeTab === \"1\"\n                  })}\n                  onClick={() => {\n                    this.toggleTab(\"1\")\n                  }}\n                >\n                  <Eye size={15} />\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({\n                    active: this.state.activeTab === \"2\"\n                  })}\n                  onClick={() => {\n                    this.toggleTab(\"2\")\n                  }}\n                >\n                  <Code size={15} />\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <TabContent activeTab={this.state.activeTab}>\n            <TabPane tabId=\"1\">\n              <Row>\n                <Col lg=\"6\" md=\"12\">\n                  <FormGroup>\n                    <InputGroup>\n                      <InputGroupButtonDropdown\n                        addonType=\"prepend\"\n                        isOpen={this.state.dropdownOpen}\n                        toggle={this.toggleDropDown}\n                      >\n                        <DropdownToggle color=\"primary\">Action</DropdownToggle>\n                        <DropdownMenu>\n                          <DropdownItem>Action 1</DropdownItem>\n                          <DropdownItem disabled>Action</DropdownItem>\n                          <DropdownItem divider />\n                          <DropdownItem>Another Action</DropdownItem>\n                        </DropdownMenu>\n                      </InputGroupButtonDropdown>\n                      <Input />\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n                <Col lg=\"6\" md=\"12\">\n                  <FormGroup>\n                    <InputGroup>\n                      <InputGroupButtonDropdown\n                        addonType=\"prepend\"\n                        isOpen={this.state.dropdownIcon}\n                        toggle={this.toggleDropdownIcon}\n                      >\n                        <DropdownToggle color=\"primary\">\n                          <Edit size={15} />\n                        </DropdownToggle>\n                        <DropdownMenu>\n                          <DropdownItem>Action 1</DropdownItem>\n                          <DropdownItem disabled>Action</DropdownItem>\n                          <DropdownItem divider />\n                          <DropdownItem>Another Action</DropdownItem>\n                        </DropdownMenu>\n                      </InputGroupButtonDropdown>\n                      <Input />\n                      <InputGroupButtonDropdown\n                        addonType=\"append\"\n                        isOpen={this.state.dropdownRight}\n                        toggle={this.toggleDropDownRight}\n                      >\n                        <DropdownToggle color=\"primary\" caret>\n                          Action\n                        </DropdownToggle>\n                        <DropdownMenu>\n                          <DropdownItem>Action 1</DropdownItem>\n                          <DropdownItem disabled>Action</DropdownItem>\n                          <DropdownItem divider />\n                          <DropdownItem>Another Action</DropdownItem>\n                        </DropdownMenu>\n                      </InputGroupButtonDropdown>\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </TabPane>\n             <TabPane className=\"component-code\" tabId=\"2\">{inputGroupDropdowns}</TabPane>\n          </TabContent>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default InputGroupDropdowns\n","import React from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Row,\n  Col,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  FormGroup\n} from \"reactstrap\"\nimport { inputGroupSizes } from \"./InputGroupSourceCode\"\nimport { Eye, Code } from \"react-feather\"\nimport classnames from \"classnames\"\n\nclass InputGroupSizes extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <Card>\n        <CardHeader className=\"mb-2\">\n          <CardTitle>Input Groups Sizes</CardTitle>\n          <div className=\"views\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({\n                    active: this.state.activeTab === \"1\"\n                  })}\n                  onClick={() => {\n                    this.toggleTab(\"1\")\n                  }}\n                >\n                  <Eye size={15} />\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({\n                    active: this.state.activeTab === \"2\"\n                  })}\n                  onClick={() => {\n                    this.toggleTab(\"2\")\n                  }}\n                >\n                  <Code size={15} />\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <TabContent activeTab={this.state.activeTab}>\n            <TabPane tabId=\"1\">\n              <Row>\n                <Col sm=\"12\" className=\"mb-2\">\n                  <FormGroup>\n                    <InputGroup size=\"lg\">\n                      <InputGroupAddon addonType=\"prepend\">@lg</InputGroupAddon>\n                      <Input />\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n                <Col sm=\"12\" className=\"mb-2\">\n                  <FormGroup>\n                    <InputGroup>\n                      <InputGroupAddon addonType=\"prepend\">\n                        @default\n                      </InputGroupAddon>\n                      <Input />\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n                <Col sm=\"12\" className=\"mb-2\">\n                  <FormGroup>\n                    <InputGroup size=\"sm\">\n                      <InputGroupAddon addonType=\"prepend\">@sm</InputGroupAddon>\n                      <Input />\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </TabPane>\n             <TabPane className=\"component-code\" tabId=\"2\">{inputGroupSizes}</TabPane>\n          </TabContent>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default InputGroupSizes\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport InputGroupBasic from \"./InputGroupBasic\"\nimport InputGroupCheckboxAndRadio from \"./InputGroupCbAndRadio\"\nimport InputGroupButtons from \"./InputGroupButtons\"\nimport InputGroupDropdown from \"./InputGroupDropdown\"\nimport InputGroupSizes from \"./InputGroupSizes\"\n\nclass InputGroups extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Input Groups\"\n          breadCrumbParent=\"Form Elements\"\n          breadCrumbActive=\"InputGroups\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <InputGroupBasic />\n          </Col>\n          <Col sm=\"12\">\n            <InputGroupCheckboxAndRadio />\n          </Col>\n          <Col sm=\"12\">\n            <InputGroupButtons />\n          </Col>\n          <Col sm=\"12\">\n            <InputGroupDropdown />\n          </Col>\n          <Col sm=\"12\">\n            <InputGroupSizes />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default InputGroups\n"],"sourceRoot":""}