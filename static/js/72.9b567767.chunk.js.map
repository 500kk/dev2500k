{"version":3,"sources":["extensions/extensionsHeader.js","extensions/sweet-alert/SweetAlertBasic.js","extensions/sweet-alert/SweetAlertTypes.js","extensions/sweet-alert/SweetAlertOptions.js","extensions/sweet-alert/SweetAlertCallback.js","extensions/sweet-alert/SweetAlert.js"],"names":["ExtensionsHeader","className","sm","data-tour","this","props","title","link","href","target","rel","subTitle","React","Component","BasicSweetAlert","state","basicAlert","titleAlert","htmlAlert","handleAlert","value","setState","Card","CardHeader","CardTitle","CardBody","Button","color","onClick","outline","show","onConfirm","SweetAlertTypes","successAlert","errorAlert","infoAlert","warningAlert","success","error","info","warning","SweetAlertOptions","imgAlert","timerAlert","outsideClickAlert","overlayAlert","inputAlert","custom","customIcon","timeout","onCancel","closeOnClickOutside","hideOverlay","input","placeHolder","BasicSweetCallback","defaultAlert","confirmAlert","cancelAlert","showCancel","reverseButtons","cancelBtnBsStyle","confirmBtnText","cancelBtnText","confirmBtnBsStyle","Slider","Fragment","Row","Col","SweetAlertCallback"],"mappings":"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","file":"static/js/72.9b567767.chunk.js","sourcesContent":["import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\n// import { Star } from \"react-feather\"\n\nclass ExtensionsHeader extends React.Component {\n  render() {\n    return (\n      <Row className=\"mb-2\">\n        <Col sm=\"12\" className=\"ml-50\">\n          <p\n            className=\"font-medium-5 mt-1 extension-title\"\n            data-tour=\"extension-title\"\n          >\n            {this.props.title}\n          </p>\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.props.subTitle}\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \n          }\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default ExtensionsHeader\n","import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass BasicSweetAlert extends React.Component {\n  state = {\n   basicAlert : false, \n   titleAlert : false, \n   htmlAlert : false, \n  }\n\n  handleAlert = (state, value) => {\n    this.setState({ [state] : value })\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <p>SweetAlert automatically centers itself on the page and looks great no matter if you're using a desktop computer, mobile or tablet. \n          It's even highly customizable, as you can see below!\n        </p>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"basicAlert\", true)} outline>Basic</Button>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"titleAlert\", true)} outline>With Title</Button>\n        <Button className=\"mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"htmlAlert\", true)} outline>HTML</Button>\n        \n        <SweetAlert title=\"Any fool can use a computer\" \n          show={this.state.basicAlert}\n          onConfirm={() => this.handleAlert(\"basicAlert\", false)}\n        >\n        </SweetAlert>\n\n        <SweetAlert title=\"The Internet?,\" \n          show={this.state.titleAlert} \n          onConfirm={() => this.handleAlert(\"titleAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">That thing is still around?</p>\n        </SweetAlert>\n\n        <SweetAlert title={<strong>HTML <u>example</u></strong>} \n          show={this.state.htmlAlert} \n          onConfirm={() => this.handleAlert(\"htmlAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">You can use bold text,{\" \"}\n              <a href=\"http://pixinvent.com\" target=\"_blank\" rel=\"noopener noreferrer\">links</a> {\" \"}\n              and other HTML tags\n            </p>\n        </SweetAlert>\n\n      </CardBody>\n    </Card>\n    )\n  }\n}\n\nexport default BasicSweetAlert","import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass SweetAlertTypes extends React.Component {\n  state = {\n   successAlert : false, \n   errorAlert : false, \n   infoAlert : false, \n   warningAlert : false\n  }\n\n  handleAlert = (state, value) => {\n    this.setState({ [state] : value })\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <p>\n          SweetAlert comes with 4 built-in types which will show a corresponding icon animation: \"warning\", \"error\", \"success\" and \"info\". \n        </p>\n        <Button className=\"mr-1 mb-1\" color=\"success\" onClick={() => this.handleAlert(\"successAlert\", true)} outline>Success</Button>\n        <Button className=\"mr-1 mb-1\" color=\"danger\" onClick={() => this.handleAlert(\"errorAlert\", true)} outline>Error</Button>\n        <Button className=\"mr-1 mb-1\" color=\"warning\" onClick={() => this.handleAlert(\"warningAlert\", true)} outline>Warning</Button>\n        <Button className=\"mb-1\" color=\"info\" onClick={() => this.handleAlert(\"infoAlert\", true)} outline>Info</Button>\n        \n\n        <SweetAlert success title=\"Success\"\n          show={this.state.successAlert} \n          onConfirm={() => this.handleAlert(\"successAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">You clicked the button!</p>\n        </SweetAlert>\n\n        <SweetAlert error title=\"Error\"\n          show={this.state.errorAlert} \n          onConfirm={() => this.handleAlert(\"errorAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert info title=\"Info!\"\n          show={this.state.infoAlert} \n          onConfirm={() => this.handleAlert(\"infoAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert warning title=\"Warning\"\n          show={this.state.warningAlert} \n          onConfirm={() => this.handleAlert(\"warningAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n      </CardBody>\n    </Card>\n    )\n  }\n}\n\nexport default SweetAlertTypes","import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport SweetAlert from 'react-bootstrap-sweetalert';\n// import alertImg from \"../../assets/img/slider/04.jpg\"\n\nclass SweetAlertOptions extends React.Component {\n  state = {\n   imgAlert : false, \n   timerAlert : false, \n   outsideClickAlert : false, \n   overlayAlert : false,\n   inputAlert : false\n  }\n\n  handleAlert = (state, value) => {\n    this.setState({ [state] : value })\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Options</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"imgAlert\", true)} outline>Image</Button>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"timerAlert\", true)} outline>Timeout</Button>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"overlayAlert\", true)} outline>Overlay</Button>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"outsideClickAlert\", true)} outline>Outside Click</Button>\n        <Button className=\"mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"inputAlert\", true)} outline>Input Alert</Button>\n        \n\n        <SweetAlert title=\"Sweet!\"  \n          custom\n          show={this.state.imgAlert}\n          customIcon=\"https://raw.githubusercontent.com/djorg83/react-bootstrap-sweetalert/master/demo/assets/thumbs-up.jpg\"\n          onConfirm={() => this.handleAlert(\"imgAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">Sweet Alert with an image.</p>\n        </SweetAlert>\n\n        <SweetAlert title=\"Auto close alert!\"\n          timeout={2000}\n          show={this.state.timerAlert} \n          onConfirm={() => this.handleAlert(\"timerAlert\", false)}\n          onCancel={() => this.handleAlert(\"timerAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              I will close in 2 seconds.\n            </p>\n        </SweetAlert>\n\n        <SweetAlert title=\"Click outside to close!\"\n          closeOnClickOutside\n          show={this.state.outsideClickAlert} \n          onConfirm={() => this.handleAlert(\"outsideClickAlert\", false)}\n          onCancel={() => this.handleAlert(\"outsideClickAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert title=\"No Overlay\"\n          hideOverlay\n          show={this.state.overlayAlert} \n          onConfirm={() => this.handleAlert(\"overlayAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              You clicked the button!\n            </p>\n        </SweetAlert>\n\n        <SweetAlert title=\"An input!\"\n          input\n          show={this.state.inputAlert}\n          placeHolder=\"Write something\" \n          onConfirm={() => this.handleAlert(\"inputAlert\", false)}\n        >\n            <p className=\"sweet-alert-text\">\n              Write something interesting:\n            </p>\n        </SweetAlert>\n\n      </CardBody>\n    </Card>\n    )\n  }\n}\n\nexport default SweetAlertOptions","import React from \"react\"\nimport { Card, CardHeader, CardBody, CardTitle, Button } from \"reactstrap\"\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass BasicSweetCallback extends React.Component {\n  state = {\n   defaultAlert : false, \n   confirmAlert : false, \n   cancelAlert : false, \n  }\n\n  handleAlert = (state, value) => {\n    this.setState({ [state] : value })\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Callback</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Button className=\"mr-1 mb-1\" color=\"primary\" onClick={() => this.handleAlert(\"defaultAlert\", true)} outline>Callback</Button>\n        \n        <SweetAlert title=\"Are you sure?\" \n          warning\n          show={this.state.defaultAlert}\n          showCancel\n          reverseButtons\n          cancelBtnBsStyle=\"danger\"\n          confirmBtnText=\"Yes, delete it!\"\n          cancelBtnText=\"Cancel\"\n          onConfirm={() => {\n            this.handleAlert(\"basicAlert\", false)\n            this.handleAlert(\"confirmAlert\", true)\n          }}\n          onCancel={() => {\n            this.handleAlert(\"basicAlert\", false)\n            this.handleAlert(\"cancelAlert\", true)\n          }}\n        >\n          You won't be able to revert this!\n        </SweetAlert>\n\n        <SweetAlert success title=\"Deleted!\" \n          confirmBtnBsStyle=\"success\"\n          show={this.state.confirmAlert} \n          onConfirm={() => {\n            this.handleAlert(\"defaultAlert\", false)\n            this.handleAlert(\"confirmAlert\", false)\n          }}\n        >\n            <p className=\"sweet-alert-text\">Your file has been deleted.</p>\n        </SweetAlert>\n\n        <SweetAlert error title=\"Cancelled\" \n          confirmBtnBsStyle=\"success\"\n          show={this.state.cancelAlert} \n          onConfirm={() =>{\n            this.handleAlert(\"defaultAlert\", false)\n            this.handleAlert(\"cancelAlert\", false)\n          }}\n        >\n            <p className=\"sweet-alert-text\">\n              Your imaginary file is safe :)\n            </p>\n        </SweetAlert>\n\n      </CardBody>\n    </Card>\n    )\n  }\n}\n\nexport default BasicSweetCallback","import React from \"react\"\nimport ExtensionsHeader from \"../extensionsHeader\"\nimport { Row, Col } from \"reactstrap\"\nimport BasicSweetAlert from \"./SweetAlertBasic\"\nimport SweetAlertTypes from \"./SweetAlertTypes\"\nimport SweetAlertOptions from \"./SweetAlertOptions\"\nimport SweetAlertCallback from \"./SweetAlertCallback\"\nimport \"../../assets/scss/plugins/extensions/sweet-alerts.scss\"\nclass Slider extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ExtensionsHeader\n          title=\"Sweet Alerts\"\n          subTitle=\"A React implementation of SweetAlert\"\n          link=\"https://github.com/djorg83/react-bootstrap-sweetalert\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <BasicSweetAlert />\n          </Col>\n          <Col sm=\"12\">\n            <SweetAlertTypes />\n          </Col>\n          <Col sm=\"12\">\n            <SweetAlertOptions />\n          </Col>\n          <Col sm=\"12\">\n            <SweetAlertCallback />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Slider\n"],"sourceRoot":""}