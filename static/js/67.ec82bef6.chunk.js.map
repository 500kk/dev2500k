{"version":3,"sources":["../node_modules/prismjs/components/prism-jsx.min.js","components/reactstrap/buttons/ButtonsSourceCode.js","components/reactstrap/buttons/ButtonBlock.js","components/reactstrap/buttons/ButtonsFilled.js","components/reactstrap/buttons/ButtonsOutline.js","components/reactstrap/buttons/ButtonsFlat.js","components/reactstrap/buttons/ButtonsGradient.js","components/reactstrap/buttons/ButtonsRelief.js","components/reactstrap/buttons/ButtonsSquare.js","components/reactstrap/buttons/ButtonsRound.js","components/reactstrap/buttons/ButtonsTextColor.js","components/reactstrap/buttons/ButtonsIcon.js","components/reactstrap/buttons/ButtonsIconOnly.js","components/reactstrap/buttons/ButtonGroup.js","components/reactstrap/buttons/ButtonSizes.js","components/reactstrap/buttons/ButtonTags.js","components/reactstrap/buttons/ButtonGroupVertical.js","components/reactstrap/buttons/Buttons.js"],"names":["i","t","util","clone","languages","javascript","jsx","extend","tag","pattern","inside","insertBefore","spread","punctuation","script","alias","rest","o","content","map","join","hooks","add","language","p","n","e","length","a","s","type","tagName","pop","push","openedBraces","g","splice","Token","tokens","Prism","filledButtons","className","outlineButtons","flatButtons","gradientButtons","reliefButtons","squareButtons","roundButtons","textColorButtons","iconButtons","iconOnlyButtons","buttonGroup","buttonSizes","buttonTags","buttonGroupVertical","ButtonBlock","state","activeTab","toggleTab","tab","setState","Fragment","this","tabId","lg","md","href","Ripple","block","outline","color","size","React","Component","FilledButtons","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","onClick","CardBody","TabContent","TabPane","Button","OutlineButtons","FaltButtons","GradientButtons","ReliefButtons","SquareButtons","RoundButtons","TextColorButtons","ButtonsIcon","disabled","ButtonsIconOnly","ButtonGroups","Row","Col","sm","ButtonGroup","ButtonSizes","ButtonTags","target","rel","value","ButtonGroupsVertical","vertical","Buttons","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","ButtonGroupVertical"],"mappings":"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","file":"static/js/67.ec82bef6.chunk.js","sourcesContent":["!function(i){var t=i.util.clone(i.languages.javascript);i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=/<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:$-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i,i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:/\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,inside:{punctuation:/\\.{3}|[{}.]/,\"attr-value\":/\\w+/}}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"attr-value\",{script:{pattern:/=(?:\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,inside:{\"script-punctuation\":{pattern:/^=(?={)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},p=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&p(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||p(t.tokens)})}(Prism);","import React from \"react\"\n\nexport const filledButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass FilledButtons extends React.Component {\n  render() {\n    return(\n        <Button.Ripple color=\"primary\">Primary</Button.Ripple>\n\n        <Button.Ripple color=\"success\">Success</Button.Ripple>\n\n        <Button.Ripple color=\"info\">Info</Button.Ripple>\n\n        <Button.Ripple color=\"warning\">Warning</Button.Ripple>\n\n        <Button.Ripple color=\"danger\">Danger</Button.Ripple>\n\n        <Button.Ripple color=\"light\">Light</Button.Ripple>\n\n        <Button.Ripple color=\"dark\">Dark</Button.Ripple>\n    )\n  }\n}\nexport default FilledButtons\n`}\n    </code>\n  </pre>\n)\n\nexport const outlineButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\n  import React from \"react\"\n  import {Button} from \"reactstrap\"\n\n  class OutlineButtons extends React.Component {\n    render() {\n      return(\n          <Button.Ripple outline color=\"primary\">Primary</Button.Ripple>\n\n          <Button.Ripple outline color=\"success\">Success</Button.Ripple>\n\n          <Button.Ripple outline color=\"info\">Info</Button.Ripple>\n\n          <Button.Ripple outline color=\"warning\">Warning</Button.Ripple>\n\n          <Button.Ripple outline color=\"danger\">Danger</Button.Ripple>\n\n          <Button.Ripple outline color=\"light\">Light</Button.Ripple>\n\n          <Button.Ripple outline color=\"dark\">Dark</Button.Ripple>\n      )\n    }\n  }\n  export default OutlineButtons\n  `}\n    </code>\n  </pre>\n)\n\nexport const flatButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass FlatButtons extends React.Component {\n    render() {\n    return(\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-primary\">Primary</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-success\">Success</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-info\">Info</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-warning\">Warning</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-danger\">Danger</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-light\">Light</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-dark\">Dark</Button.Ripple>\n    )\n    }\n}\nexport default FlatButtons\n    `}\n    </code>\n  </pre>\n)\n\nexport const gradientButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass GradientButtons extends React.Component {\nrender() {\n    return(\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-primary\" color=\"none\">Primary</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-success\" color=\"none\">Success</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-info\" color=\"none\">Info</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-warning\" color=\"none\">Warning</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-danger\" color=\"none\">Danger</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1 bg-gradient-dark\" color=\"none\">Dark</Button.Ripple>\n    )\n}\n}\nexport default GradientButtons\n      `}\n    </code>\n  </pre>\n)\n\nexport const reliefButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass ReliefButtons extends React.Component {\n    render() {\n    return(\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"relief-primary\">Primary</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"relief-success\">Success</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"relief-info\">Info</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"relief-warning\">Warning</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"relief-danger\">Danger</Button.Ripple>\n\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"relief-dark\">Dark</Button.Ripple>\n    )\n    }\n}\nexport default ReliefButtons\n        `}\n    </code>\n  </pre>\n)\n\nexport const squareButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass SqaureButtons extends React.Component {\n    render() {\n    return(\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"primary\">\n      Primary\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"success\">\n      Success\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"info\">\n      Info\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"warning\">\n      Warning\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"danger\">\n      Danger\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"light\">\n      Light\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 square\" outline color=\"dark\">\n      Dark\n    </Button.Ripple>\n    )\n    }\n}\nexport default SqaureButtons\n          `}\n    </code>\n  </pre>\n)\n\nexport const roundButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass RoundButtons extends React.Component {\n    render() {\n    return(\n      <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"primary\">\n      Primary\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"success\">\n      Success\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"info\">\n      Info\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"warning\">\n      Warning\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"danger\">\n      Danger\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"light\">\n      Light\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 round\" outline color=\"dark\">\n      Dark\n    </Button.Ripple>\n    )\n    }\n}\nexport default RoundButtons\n            `}\n    </code>\n  </pre>\n)\n\nexport const textColorButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass TextColorButtons extends React.Component {\n    render() {\n    return(\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-primary\" color=\"flat-primary\">\n      Primary\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-success\" color=\"flat-success\">\n      Success\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-info\" color=\"flat-info\">\n      Info\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-warning\" color=\"flat-warning\">\n      Warning\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-danger\" color=\"flat-danger\">\n      Danger\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-light\" color=\"flat-light\">\n      Light\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1  border-primary text-dark\" color=\"flat-dark\">\n      Dark\n    </Button.Ripple>\n    )\n    }\n}\nexport default TextColorButtons\n              `}\n    </code>\n  </pre>\n)\n\nexport const iconButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass IconButtons extends React.Component {\n  render() {\n  return(\n    <Button.Ripple className=\"mr-1 mb-1\" outline color=\"primary\">\n      <Home size={14} />\n      Home\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1\" color=\"warning\">\n      <Star size={14} />\n       Star\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-success\">\n      <Check size={14} />\n      Done\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1\" outline color=\"primary\" disabled>\n      Home size={14} />\n      Home\n    </Button.Ripple>\n  )\n  }\n}\nexport default IconButtons\n              `}\n    </code>\n  </pre>\n)\n\nexport const iconOnlyButtons = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\nimport { Search, Inbox, Camera } from \"react-feather\"\n\nclass IconOnlyButtons extends React.Component {\n  render() {\n  return(\n    <Button.Ripple className=\"mr-1 mb-1\" outline color=\"primary\">\n      <Search size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1\" color=\"warning\">\n      <Inbox size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-success\">\n      <Camera size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1\" outline color=\"primary\" disabled>\n      <Search size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple\n      className=\"mr-1 mb-1 rounded-circle\"\n      outline\n      color=\"primary\"\n    >\n      <Search size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple className=\"mr-1 mb-1 rounded-circle\" color=\"warning\">\n      <Inbox size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple\n      className=\"mr-1 mb-1 rounded-circle\"\n      color=\"flat-success\"\n    >\n      <Camera size={14} />\n    </Button.Ripple>\n\n    <Button.Ripple\n      className=\"mr-1 mb-1 rounded-circle\"\n      outline\n      color=\"primary\"\n      disabled\n    >\n      <Search size={14} />\n    </Button.Ripple>\n  )\n  }\n}\nexport default IconOnlyButtons\n              `}\n    </code>\n  </pre>\n)\n\nexport const buttonGroup = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button, ButtonGroup, Row, Col} from \"reactstrap\"\nimport { Facebook, Instagram, Twitter } from \"react-feather\"\n\nclass ButtonGroups extends React.Component {\n  render() {\n  return(\n    <Row>\n    <Col md={6} sm={12}>\n      <Button.RippleGroup>\n        <Button.Ripple color=\"primary\">Left</Button.Ripple>{\" \"}\n        <Button.Ripple color=\"danger\">Middle</Button.Ripple>{\" \"}\n        <Button.Ripple color=\"info\">Right</Button.Ripple>{\" \"}\n      </ButtonGroup>\n    </Col>\n\n    <Col md={6} sm={12}>\n      <Button.RippleGroup>\n        <Button.Ripple outline color=\"primary\">\n          <Facebook size={15} />\n        </Button.Ripple>{\" \"}\n        <Button.Ripple outline color=\"danger\">\n          <Twitter size={15} />\n        </Button.Ripple>{\" \"}\n        <Button.Ripple outline color=\"info\">\n          <Instagram size={15} />\n        </Button.Ripple>{\" \"}\n      </ButtonGroup>\n    </Col>\n  </Row>\n  )\n  }\n}\nexport default ButtonGroups\n              `}\n    </code>\n  </pre>\n)\n\nexport const buttonSizes = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button, Row, Col} from \"reactstrap\"\n\nclass ButtonSizes extends React.Component {\n  render() {\n  return(\n    <Row>\n      <Col md={6} sm={12}>\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"primary\" size=\"lg\">\n          Large\n        </Button.Ripple>{\" \"}\n        <Button.Ripple className=\"mr-1 mb-1\" color=\"danger\">\n          Default\n        </Button.Ripple>{\" \"}\n        <Button.Ripple className=\"mb-1\" color=\"info\" size=\"sm\">\n          Small\n        </Button.Ripple>{\" \"}\n      </Col>\n      <Col md={6} sm={12}>\n        <Button.Ripple\n          outline\n          className=\"mr-1 mb-1\"\n          color=\"primary\"\n          size=\"lg\"\n        >\n          Large\n        </Button.Ripple>{\" \"}\n        <Button.Ripple outline className=\"mr-1 mb-1\" color=\"danger\">\n          Default\n        </Button.Ripple>{\" \"}\n        <Button.Ripple outline className=\"mb-1\" color=\"info\" size=\"sm\">\n          Small\n        </Button.Ripple>\n      </Col>\n  </Row>\n  )\n  }\n}\nexport default ButtonSizes\n              `}\n    </code>\n  </pre>\n)\n\nexport const buttonBlock = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button, Row, Col} from \"reactstrap\"\n\nclass ButtonBlock extends React.Component {\n  render() {\n  return(\n    <Row>\n      <Col lg={6} md={12}>\n        <Button.Ripple className=\"mr-1 mb-1 btn-block\" color=\"primary\" size=\"lg\">\n          Block Level Button\n        </Button.Ripple>\n      </Col>\n      <Col lg={6} md={12}>\n        <Button.Ripple outline className=\"mr-1 mb-1 btn-block\" color=\"primary\" size=\"lg\">\n          Block Level Button\n        </Button.Ripple>\n      </Col>\n    </Row>\n  )\n  }\n}\nexport default ButtonBlock\n              `}\n    </code>\n  </pre>\n)\n\nexport const buttonTags = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button} from \"reactstrap\"\n\nclass ButtonTags extends React.Component {\n  render() {\n  return(\n    <a\n      className=\"mr-1 mb-1 btn btn-primary\"\n      color=\"primary\"\n      href=\"https://pixinvent.com/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Link\n    </a>\n    <Button.Ripple className=\"mr-1 mb-1\" color=\"primary\" tag=\"button\">\n      Button\n    </Button.Ripple>\n    <input\n      className=\"mr-1 mb-1 btn btn-primary\"\n      type=\"button\"\n      value=\"Input\"\n    />\n    <input\n      className=\"mr-1 mb-1 btn btn-primary\"\n      type=\"submit\"\n      value=\"Submit\"\n    />\n  )\n  }\n}\nexport default ButtonTags\n              `}\n    </code>\n  </pre>\n)\n\nexport const buttonGroupVertical = (\n  <pre>\n    <code className=\"language-jsx\">\n      {`\nimport React from \"react\"\nimport {Button, ButtonGroup, Row, Col} from \"reactstrap\"\n\nclass ButtonGroupsVertical extends React.Component {\n  render() {\n  return(\n    <Row>\n      <Col md={4} sm={12}>\n        <Button.RippleGroup vertical className=\"mb-1\">\n          <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n        </ButtonGroup>\n      </Col>\n      <Col md={4} sm={12}>\n        <Button.RippleGroup vertical className=\"mb-1\">\n          <Button.Ripple color=\"primary\">Primary</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"success\">Success</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"info\">Info</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"warning\">Warning</Button.Ripple>{\" \"}\n          <Button.Ripple color=\"danger\">Danger</Button.Ripple>{\" \"}\n        </ButtonGroup>\n      </Col>\n      <Col md={4} sm={12}>\n        <Button.RippleGroup vertical className=\"mb-1\">\n          <Button.Ripple outline color=\"primary\">\n            Button\n          </Button.Ripple>{\" \"}\n          <Button.Ripple outline color=\"success\">\n            Button\n          </Button.Ripple>{\" \"}\n          <Button.Ripple outline color=\"info\">\n            Button\n          </Button.Ripple>{\" \"}\n          <Button.Ripple outline color=\"warning\">\n            Button\n          </Button.Ripple>{\" \"}\n          <Button.Ripple outline color=\"danger\">\n            Button\n          </Button.Ripple>{\" \"}\n        </ButtonGroup>\n      </Col>\n  </Row>\n  )\n  }\n}\nexport default ButtonGroupsVertical\n              `}\n    </code>\n  </pre>\n)\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { buttonBlock } from \"./ButtonsSourceCode\"\n\nclass ButtonBlock extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n            <CardTitle></CardTitle>\n            <div className=\"views\">\n              </div>        \n            <p>\n              \n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Row >\n                    <Col lg={9} md={12}>\n                    <a href=\"buildFolder\">\n                    <Button.Ripple\n                      block\n                      outline\n                      className=\"btn-block\"\n                      color=\"primary\"\n                      size=\"lg\"\n                    >\n                       בנה לי תיק\n                    </Button.Ripple>\n                    </a>\n                  </Col>\n                </Row>\n                </TabPane>\n                </TabContent>\n      </React.Fragment>\n    )\n  }\n}\nexport default ButtonBlock\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { filledButtons } from \"./ButtonsSourceCode\"\n\nclass FilledButtons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Filled</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Reactstrap includes six predefined button styles, each serving its\n              own semantic purpose.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"primary\">Primary</Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"success\">Success</Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple color=\"info\">Info</Button.Ripple>{\" \"}\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"warning\">Warning</Button.Ripple>{\" \"}\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"danger\">Danger</Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"light\">Light</Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"dark\">Dark</Button.Ripple>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {filledButtons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default FilledButtons\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { outlineButtons } from \"./ButtonsSourceCode\"\n\nclass OutlineButtons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Outline</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use attribute outline with button tag to create an outline button.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"primary\" outline>\n                    Primary\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"success\" outline>\n                    Success\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple color=\"info\" outline>\n                    Info\n                  </Button.Ripple>{\" \"}\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"warning\" outline>\n                    Warning\n                  </Button.Ripple>{\" \"}\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"danger\" outline>\n                    Danger\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"light\" outline>\n                    Light\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"dark\" outline>\n                    Dark\n                  </Button.Ripple>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {outlineButtons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default OutlineButtons\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { flatButtons } from \"./ButtonsSourceCode\"\n\nclass FaltButtons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Flat</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>color=\"flat-colorName\"</code> to create a flat button.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"flat-primary\">Primary</Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"flat-success\">Success</Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"flat-info\">Info</Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"flat-warning\">Warning</Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"flat-danger\">Danger</Button.Ripple>{\" \"}\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"flat-light\">Light</Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple color=\"flat-dark\">Dark</Button.Ripple>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {flatButtons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default FaltButtons\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { gradientButtons } from \"./ButtonsSourceCode\"\n\nclass GradientButtons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Gradient</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>.bg-gradient-colorName</code> to create a gradient\n              button.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"bg-gradient-primary\" color=\"none\">\n                    Primary\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"bg-gradient-success\" color=\"none\">\n                    Success\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"bg-gradient-info\" color=\"none\">\n                    Info\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"bg-gradient-warning\" color=\"none\">\n                    Warning\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"bg-gradient-danger\" color=\"none\">\n                    Danger\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"bg-gradient-dark\" color=\"none\">\n                    Dark\n                  </Button.Ripple>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {gradientButtons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default GradientButtons\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { reliefButtons } from \"./ButtonsSourceCode\"\n\nclass ReliefButtons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Relief</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>color=\"relief-colorName\"</code> to create a relief\n              button.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Button className=\"mr-1 mb-1\" color=\"relief-primary\">\n                  Primary\n                </Button>{\" \"}\n                <Button className=\"mr-1 mb-1\" color=\"relief-success\">\n                  Success\n                </Button>{\" \"}\n                <Button className=\"mr-1 mb-1\" color=\"relief-info\">\n                  Info\n                </Button>{\" \"}\n                <Button className=\"mr-1 mb-1\" color=\"relief-warning\">\n                  Warning\n                </Button>{\" \"}\n                <Button className=\"mr-1 mb-1\" color=\"relief-danger\">\n                  Danger\n                </Button>{\" \"}\n                <Button className=\"mr-1 mb-1\" color=\"relief-light\">\n                  Light\n                </Button>{\" \"}\n                <Button className=\"mr-1 mb-1\" color=\"relief-dark\">\n                  Dark\n                </Button>{\" \"}\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {reliefButtons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ReliefButtons\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { squareButtons } from \"./ButtonsSourceCode\"\n\nclass SquareButtons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Square</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>.square</code> with attribute outline to create a square\n              button.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"square\" color=\"primary\" outline>\n                    Primary\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"square\" color=\"success\" outline>\n                    Success\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple className=\"square\" color=\"info\" outline>\n                    Info\n                  </Button.Ripple>{\" \"}\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"square\" color=\"warning\" outline>\n                    Warning\n                  </Button.Ripple>{\" \"}\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"square\" color=\"danger\" outline>\n                    Danger\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"square\" color=\"light\" outline>\n                    Light\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"square\" color=\"dark\" outline>\n                    Dark\n                  </Button.Ripple>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {squareButtons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default SquareButtons\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { roundButtons } from \"./ButtonsSourceCode\"\n\nclass RoundButtons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Round</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>.round</code> with attribute outline to create a round\n              button.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"round\" color=\"primary\" outline>\n                    Primary\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"round\" color=\"success\" outline>\n                    Success\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple className=\"round\" color=\"info\" outline>\n                    Info\n                  </Button.Ripple>{\" \"}\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"round\" color=\"warning\" outline>\n                    Warning\n                  </Button.Ripple>{\" \"}\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"round\" color=\"danger\" outline>\n                    Danger\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"round\" color=\"light\" outline>\n                    Light\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple className=\"round\" color=\"dark\" outline>\n                    Dark\n                  </Button.Ripple>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {roundButtons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default RoundButtons\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { textColorButtons } from \"./ButtonsSourceCode\"\n\nclass TextColorButtons extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Text Color</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              You can change the font color of buttons, using{\" \"}\n              <code>.text-colorName</code>.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple\n                    className=\"border-primary text-primary\"\n                    color=\"flat-primary\"\n                  >\n                    Primary\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple\n                    className=\"border-primary text-success\"\n                    color=\"flat-success\"\n                  >\n                    Success\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple\n                    className=\"border-primary text-info\"\n                    color=\"flat-info\"\n                  >\n                    Info\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple\n                    className=\"border-primary text-warning\"\n                    color=\"flat-warning\"\n                  >\n                    Warning\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple\n                    className=\"border-primary text-danger\"\n                    color=\"flat-danger\"\n                  >\n                    Danger\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple\n                    className=\"border-primary text-light\"\n                    color=\"flat-light\"\n                  >\n                    Light\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  <Button.Ripple\n                    className=\"border-primary text-dark\"\n                    color=\"flat-dark\"\n                  >\n                    Dark\n                  </Button.Ripple>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {textColorButtons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default TextColorButtons\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, Home, Star, Check } from \"react-feather\"\nimport { iconButtons } from \"./ButtonsSourceCode\"\n\nclass ButtonsIcon extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Icon</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Button.Ripple className=\"mr-1 mb-1\" outline color=\"primary\">\n                  <Home size={14} />\n                  <span className=\"align-middle ml-25\">Home</span>\n                </Button.Ripple>\n                <Button.Ripple className=\"mr-1 mb-1\" color=\"warning\">\n                  <Star size={14} />\n                  <span className=\"align-middle ml-25\">Star</span>\n                </Button.Ripple>\n                <Button.Ripple className=\"mr-1 mb-1\" color=\"flat-success\">\n                  <Check size={14} />\n                  <span className=\"align-middle ml-25\">Done</span>\n                </Button.Ripple>\n                <Button.Ripple\n                  className=\"mr-1 mb-1\"\n                  outline\n                  color=\"primary\"\n                  disabled\n                >\n                  <Home size={14} />\n                  <span className=\"align-middle ml-25\">Home</span>\n                </Button.Ripple>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {iconButtons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ButtonsIcon\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, Search, Inbox, Camera } from \"react-feather\"\nimport { iconOnlyButtons } from \"./ButtonsSourceCode\"\n\nclass ButtonsIconOnly extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Icon Only</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              You can use <code>.btn-icon</code>. you can create a rounded\n              button by using <code>.rounded-circle</code> with\n              <code>.btn-icon</code>. You can only use <code>.btn-icon</code>\n              when you only want icon in your button\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple className=\"btn-icon\" outline color=\"primary\">\n                    <Search size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple className=\"btn-icon\" color=\"warning\">\n                    <Inbox size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple className=\"btn-icon\" color=\"flat-success\">\n                    <Camera size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple\n                    className=\"btn-icon\"\n                    outline\n                    color=\"primary\"\n                    disabled\n                  >\n                    <Search size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple\n                    className=\"btn-icon rounded-circle\"\n                    outline\n                    color=\"primary\"\n                  >\n                    <Search size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple\n                    className=\"btn-icon rounded-circle\"\n                    color=\"warning\"\n                  >\n                    <Inbox size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple\n                    className=\"btn-icon rounded-circle\"\n                    color=\"flat-success\"\n                  >\n                    <Camera size={16} />\n                  </Button.Ripple>\n                </div>\n                <div className=\"d-inline-block mr-1 mb-1\">\n                  {\" \"}\n                  <Button.Ripple\n                    className=\"btn-icon rounded-circle\"\n                    outline\n                    color=\"primary\"\n                    disabled\n                  >\n                    <Search size={16} />\n                  </Button.Ripple>\n                </div>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {iconOnlyButtons}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ButtonsIconOnly\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  ButtonGroup,\n  Row,\n  Col\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code, Facebook, Twitter, Instagram } from \"react-feather\"\nimport { buttonGroup } from \"./ButtonsSourceCode\"\n\nclass ButtonGroups extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Button Group</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Group a series of buttons together on a single line with the\n              button group.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Row>\n                  <Col md={6} sm={12}>\n                    <ButtonGroup className=\"mb-1\">\n                      <Button.Ripple color=\"primary\">Left</Button.Ripple>{\" \"}\n                      <Button.Ripple color=\"danger\">Middle</Button.Ripple>{\" \"}\n                      <Button.Ripple color=\"info\">Right</Button.Ripple>{\" \"}\n                    </ButtonGroup>\n                  </Col>\n                  <Col md={6} sm={12}>\n                    <ButtonGroup className=\"mb-1\">\n                      <Button.Ripple outline color=\"primary\">\n                        <Facebook size={15} />\n                      </Button.Ripple>{\" \"}\n                      <Button.Ripple outline color=\"danger\">\n                        <Twitter size={15} />\n                      </Button.Ripple>{\" \"}\n                      <Button.Ripple outline color=\"info\">\n                        <Instagram size={15} />\n                      </Button.Ripple>{\" \"}\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {buttonGroup}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ButtonGroups\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { buttonSizes } from \"./ButtonsSourceCode\"\n\nclass ButtonSizes extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Sizes</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>Size</code> attribute to chnage size of a button.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Row>\n                  <Col md={6} sm={12}>\n                    <div className=\"d-inline-block mr-1 mb-1\">\n                      <Button.Ripple color=\"primary\" size=\"lg\">\n                        Large\n                      </Button.Ripple>\n                    </div>\n                    <div className=\"d-inline-block mr-1 mb-1\">\n                      <Button.Ripple color=\"primary\">Default</Button.Ripple>\n                    </div>\n                    <div className=\"d-inline-block mb-1\">\n                      <Button.Ripple color=\"primary\" size=\"sm\">\n                        Small\n                      </Button.Ripple>\n                    </div>\n                  </Col>\n                  <Col md={6} sm={12}>\n                    <div className=\"d-inline-block mr-1 mb-1\">\n                      <Button.Ripple\n                        outline\n                        className=\"mr-1 mb-1\"\n                        color=\"primary\"\n                        size=\"lg\"\n                      >\n                        Large\n                      </Button.Ripple>\n                    </div>\n                    <div className=\"d-inline-block mr-1 mb-1\">\n                      <Button.Ripple outline color=\"primary\">\n                        Default\n                      </Button.Ripple>\n                    </div>\n                    <div className=\"d-inline-block mb-1\">\n                      <Button.Ripple outline color=\"primary\" size=\"sm\">\n                        Small\n                      </Button.Ripple>\n                    </div>\n                  </Col>\n                </Row>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {buttonSizes}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ButtonSizes\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { buttonTags } from \"./ButtonsSourceCode\"\n\nclass ButtonTags extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Button tags</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              You can change element tag by using{\" \"}\n              <code>.btn.btn-colorName</code> classes.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <a\n                  className=\"mr-1 mb-1 btn btn-primary\"\n                  color=\"primary\"\n                  href=\"https://pixinvent.com/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Link\n                </a>\n                <Button className=\"mr-1 mb-1\" color=\"primary\" tag=\"button\">\n                  Button\n                </Button>\n                <input\n                  className=\"mr-1 mb-1 btn btn-primary\"\n                  type=\"button\"\n                  value=\"Input\"\n                />\n                <input\n                  className=\"mr-1 mb-1 btn btn-primary\"\n                  type=\"submit\"\n                  value=\"Submit\"\n                />\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {buttonTags}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ButtonTags\n","import React from \"react\"\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  ButtonGroup,\n  Row,\n  Col\n} from \"reactstrap\"\nimport classnames from \"classnames\"\nimport { Eye, Code } from \"react-feather\"\nimport { buttonGroupVertical } from \"./ButtonsSourceCode\"\n\nclass ButtonGroupsVertical extends React.Component {\n  state = {\n    activeTab: \"1\"\n  }\n\n  toggleTab = tab => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab })\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            <CardTitle>Vertical Variation</CardTitle>\n            <div className=\"views\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"1\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"1\")\n                    }}\n                  >\n                    <Eye size={15} />\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <p>\n              Use <code>vertical</code> attribute with <code>ButtonGroup</code>{\" \"}\n              tag to create a vertical button group.\n            </p>\n            <TabContent activeTab={this.state.activeTab}>\n              <TabPane tabId=\"1\">\n                <Row>\n                  <Col md={4} sm={12}>\n                    <ButtonGroup vertical className=\"mb-1\">\n                      <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n                      <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n                      <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n                      <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n                      <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n                    </ButtonGroup>\n                  </Col>\n                  <Col md={4} sm={12}>\n                    <ButtonGroup vertical className=\"mb-1\">\n                      <Button.Ripple color=\"primary\">Button</Button.Ripple>{\" \"}\n                      <Button.Ripple color=\"success\">Button</Button.Ripple>{\" \"}\n                      <Button.Ripple color=\"info\">Button</Button.Ripple>{\" \"}\n                      <Button.Ripple color=\"warning\">Button</Button.Ripple>{\" \"}\n                      <Button.Ripple color=\"danger\">Button</Button.Ripple>{\" \"}\n                    </ButtonGroup>\n                  </Col>\n                  <Col md={4} sm={12}>\n                    <ButtonGroup vertical className=\"mb-1\">\n                      <Button.Ripple outline color=\"primary\">\n                        Button\n                      </Button.Ripple>{\" \"}\n                      <Button.Ripple outline color=\"success\">\n                        Button\n                      </Button.Ripple>{\" \"}\n                      <Button.Ripple outline color=\"info\">\n                        Button\n                      </Button.Ripple>{\" \"}\n                      <Button.Ripple outline color=\"warning\">\n                        Button\n                      </Button.Ripple>{\" \"}\n                      <Button.Ripple outline color=\"danger\">\n                        Button\n                      </Button.Ripple>{\" \"}\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </TabPane>\n              <TabPane className=\"component-code\" tabId=\"2\">\n                {buttonGroupVertical}\n              </TabPane>\n            </TabContent>\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default ButtonGroupsVertical\n","import React from \"react\"\nimport FilledButtons from \"./ButtonsFilled\"\nimport OutlineButtons from \"./ButtonsOutline\"\nimport FlatButtons from \"./ButtonsFlat\"\nimport GradientButtons from \"./ButtonsGradient\"\nimport ReliefButtons from \"./ButtonsRelief\"\nimport SquareButtons from \"./ButtonsSquare\"\nimport RoundButtons from \"./ButtonsRound\"\nimport TextColorButtons from \"./ButtonsTextColor\"\nimport IconButtons from \"./ButtonsIcon\"\nimport IconOnlyButtons from \"./ButtonsIconOnly\"\nimport ButtonGroups from \"./ButtonGroup\"\nimport ButtonSizes from \"./ButtonSizes\"\nimport ButtonBlock from \"./ButtonBlock\"\nimport ButtonTags from \"./ButtonTags\"\nimport ButtonGroupVertical from \"./ButtonGroupVertical\"\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\nimport Prism from \"prismjs\"\nimport \"prismjs/components/prism-jsx.min\"\nclass Buttons extends React.Component {\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <BreadCrumbs\n          breadCrumbTitle=\"Buttons\"\n          breadCrumbParent=\"Components\"\n          breadCrumbActive=\"Buttons\"\n        />\n        <FilledButtons />\n        <OutlineButtons />\n        <FlatButtons />\n        <GradientButtons />\n        <ReliefButtons />\n        <SquareButtons />\n        <RoundButtons />\n        <TextColorButtons />\n        <IconButtons />\n        <IconOnlyButtons />\n        <ButtonGroups />\n        <ButtonSizes />\n        <ButtonBlock />\n        <ButtonTags />\n        <ButtonGroupVertical />\n      </React.Fragment>\n    )\n  }\n}\nexport default Buttons\n"],"sourceRoot":""}